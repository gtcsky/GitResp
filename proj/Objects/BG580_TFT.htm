<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\BG580_TFT.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\BG580_TFT.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Wed Dec 01 14:20:39 2021
<BR><P>
<H3>Maximum Stack Usage =        488 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
simpleProfileChangeCB &rArr; updateDeviceDefaultInfo &rArr; UserInfo_NotifyStatus &rArr; SimpleProfile_SetParameter &rArr; GATTServApp_ProcessCharCfg &rArr; GATTServApp_ReadAttr &rArr; gattServApp_FindAuthorizeAttrCB
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[3]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">NMI_Handler</a><BR>
 <LI><a href="#[4]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">HardFault_Handler</a><BR>
 <LI><a href="#[5]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SVC_Handler</a><BR>
 <LI><a href="#[6]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">PendSV_Handler</a><BR>
 <LI><a href="#[7]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">SysTick_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2b]">GAPRole_ProcessEvent</a> from peripheral.o(i.GAPRole_ProcessEvent) referenced from osal_blesmartperipheral.o(.constdata)
 <LI><a href="#[28]">GAP_ProcessEvent</a> from rom1Sym.txt(ABSOLUTE) referenced from osal_blesmartperipheral.o(.constdata)
 <LI><a href="#[2c]">GATTServApp_ProcessEvent</a> from gattservapp.o(i.GATTServApp_ProcessEvent) referenced from osal_blesmartperipheral.o(.constdata)
 <LI><a href="#[29]">GATT_ProcessEvent</a> from rom1Sym.txt(ABSOLUTE) referenced from osal_blesmartperipheral.o(.constdata)
 <LI><a href="#[26]">HCI_ProcessEvent</a> from rom1Sym.txt(ABSOLUTE) referenced from osal_blesmartperipheral.o(.constdata)
 <LI><a href="#[4]">HardFault_Handler</a> from startup_armcm0.o(.text) referenced from startup_armcm0.o(RESET)
 <LI><a href="#[27]">L2CAP_ProcessEvent</a> from rom1Sym.txt(ABSOLUTE) referenced from osal_blesmartperipheral.o(.constdata)
 <LI><a href="#[25]">LL_ProcessEvent</a> from rom1Sym.txt(ABSOLUTE) referenced from osal_blesmartperipheral.o(.constdata)
 <LI><a href="#[1b]">LL_SetScanControl1</a> from patch.o(i.LL_SetScanControl1) referenced from patch.o(i.init_config)
 <LI><a href="#[3]">NMI_Handler</a> from startup_armcm0.o(.text) referenced from startup_armcm0.o(RESET)
 <LI><a href="#[6]">PendSV_Handler</a> from startup_armcm0.o(.text) referenced from startup_armcm0.o(RESET)
 <LI><a href="#[2]">Reset_Handler</a> from startup_armcm0.o(.text) referenced from startup_armcm0.o(RESET)
 <LI><a href="#[2a]">SM_ProcessEvent</a> from rom1Sym.txt(ABSOLUTE) referenced from osal_blesmartperipheral.o(.constdata)
 <LI><a href="#[5]">SVC_Handler</a> from startup_armcm0.o(.text) referenced from startup_armcm0.o(RESET)
 <LI><a href="#[7]">SysTick_Handler</a> from startup_armcm0.o(.text) referenced from startup_armcm0.o(RESET)
 <LI><a href="#[9]">SystemInit</a> from system_armcm0.o(i.SystemInit) referenced from startup_armcm0.o(.text)
 <LI><a href="#[a]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_armcm0.o(.text)
 <LI><a href="#[e]">_sputc</a> from printf8.o(i._sputc) referenced from printf8.o(i.__0sprintf$8)
 <LI><a href="#[14]">adc_wakeup_hdl</a> from adc.o(i.adc_wakeup_hdl) referenced from adc.o(i.hal_adc_init)
 <LI><a href="#[33]">battReadAttrCB</a> from battservice.o(i.battReadAttrCB) referenced from battservice.o(.constdata)
 <LI><a href="#[34]">battWriteAttrCB</a> from battservice.o(i.battWriteAttrCB) referenced from battservice.o(.constdata)
 <LI><a href="#[f]">batt_adc_evt</a> from battery.o(i.batt_adc_evt) referenced from battery.o(i.batt_adc_init)
 <LI><a href="#[2d]">bleSmartPeripheral_ProcessEvent</a> from blesmartperipheral.o(i.bleSmartPeripheral_ProcessEvent) referenced from osal_blesmartperipheral.o(.constdata)
 <LI><a href="#[30]">command_center_ProcessEvent</a> from command_center.o(i.command_center_ProcessEvent) referenced from osal_blesmartperipheral.o(.constdata)
 <LI><a href="#[10]">customizeFlashCbfunc</a> from user_lighteffect.o(i.customizeFlashCbfunc) referenced from user_lighteffect.o(i.customizeFlashEffect)
 <LI><a href="#[11]">customizeFlashEndCbfunc</a> from user_lighteffect.o(i.customizeFlashEndCbfunc) referenced from user_lighteffect.o(i.customizeFlashEffect)
 <LI><a href="#[12]">customizeGrdualCbfunc</a> from user_lighteffect.o(i.customizeGrdualCbfunc) referenced from user_lighteffect.o(i.customizeGradualEffect)
 <LI><a href="#[13]">customizeGrdualEndCbfunc</a> from user_lighteffect.o(i.customizeGrdualEndCbfunc) referenced from user_lighteffect.o(i.customizeGradualEffect)
 <LI><a href="#[35]">devInfo_ReadAttrCB</a> from devinfoservice.o(i.devInfo_ReadAttrCB) referenced from devinfoservice.o(.constdata)
 <LI><a href="#[21]">fireProcess</a> from user_lighteffect.o(i.fireProcess) referenced from user_lighteffect.o(i.sceneFire)
 <LI><a href="#[23]">flashMode2StyleAfunc</a> from user_lighteffect.o(i.flashMode2StyleAfunc) referenced from user_lighteffect.o(i.set2FlashMode2StyleA)
 <LI><a href="#[d]">fputc</a> from fputc.o(i.fputc) referenced from printf8.o(i.__0printf$8)
 <LI><a href="#[b]">gattServApp_HandleConnStatusCB</a> from gattservapp.o(i.gattServApp_HandleConnStatusCB) referenced from gattservapp.o(i.GATTServApp_Init)
 <LI><a href="#[36]">ggs_ReadAttrCB</a> from gapgattserver.o(i.ggs_ReadAttrCB) referenced from gapgattserver.o(.constdata)
 <LI><a href="#[37]">ggs_WriteAttrCB</a> from gapgattserver.o(i.ggs_WriteAttrCB) referenced from gapgattserver.o(.constdata)
 <LI><a href="#[16]">gpio_sleep_handler</a> from gpio.o(i.gpio_sleep_handler) referenced from gpio.o(i.hal_gpio_init)
 <LI><a href="#[15]">gpio_wakeup_handler</a> from gpio.o(i.gpio_wakeup_handler) referenced from gpio.o(i.hal_gpio_init)
 <LI><a href="#[45]">hal_ADC_IRQHandler</a> from adc.o(i.hal_ADC_IRQHandler) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[44]">hal_GPIO_IRQHandler</a> from gpio.o(i.hal_GPIO_IRQHandler) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[42]">hal_SPI0_IRQHandler</a> from spi.o(i.hal_SPI0_IRQHandler) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[43]">hal_SPI1_IRQHandler</a> from spi.o(i.hal_SPI1_IRQHandler) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[41]">hal_UART0_IRQHandler</a> from uart.o(i.hal_UART0_IRQHandler) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[3d]">hal_pwrmgr_sleep_process</a> from pwrmgr.o(i.hal_pwrmgr_sleep_process) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[3e]">hal_pwrmgr_wakeup_process</a> from pwrmgr.o(i.hal_pwrmgr_wakeup_process) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[1f]">handleConnStatusCB</a> from ota_app_service.o(i.handleConnStatusCB) referenced from ota_app_service.o(i.ota_app_AddService)
 <LI><a href="#[40]">hard_fault</a> from jump_table.o(i.hard_fault) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[2f]">light_ProcessEvent</a> from light.o(i.light_ProcessEvent) referenced from osal_blesmartperipheral.o(.constdata)
 <LI><a href="#[22]">lightning1Process</a> from user_lighteffect.o(i.lightning1Process) referenced from user_lighteffect.o(i.sceneLightning1)
 <LI><a href="#[1c]">llSetupAdv1</a> from patch.o(i.llSetupAdv1) referenced from patch.o(i.init_config)
 <LI><a href="#[19]">ll_hw_go1</a> from patch.o(i.ll_hw_go1) referenced from patch.o(i.init_config)
 <LI><a href="#[8]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[1e]">negedge_callback_wakeup</a> from keys.o(i.negedge_callback_wakeup) referenced from keys.o(i.keys_Init)
 <LI><a href="#[3c]">osalInitTasks</a> from osal_blesmartperipheral.o(i.osalInitTasks) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[38]">ota_ReadAttrCB</a> from ota_app_service.o(i.ota_ReadAttrCB) referenced from ota_app_service.o(.constdata)
 <LI><a href="#[39]">ota_WriteAttrCB</a> from ota_app_service.o(i.ota_WriteAttrCB) referenced from ota_app_service.o(.constdata)
 <LI><a href="#[1]">peripheralStateNotificationCB</a> from blesmartperipheral.o(i.peripheralStateNotificationCB) referenced 2 times from blesmartperipheral.o(.data)
 <LI><a href="#[1d]">posedge_callback_wakeup</a> from keys.o(i.posedge_callback_wakeup) referenced from keys.o(i.keys_Init)
 <LI><a href="#[2e]">protocol_uart_ProcessEvent</a> from protocol_uart.o(i.protocol_uart_ProcessEvent) referenced from osal_blesmartperipheral.o(.constdata)
 <LI><a href="#[32]">protocol_uart_evt_hdl</a> from protocol_uart.o(i.protocol_uart_evt_hdl) referenced from protocol_uart.o(.constdata)
 <LI><a href="#[20]">protocol_uart_wakeup_handle</a> from protocol_uart.o(i.protocol_uart_wakeup_handle) referenced from protocol_uart.o(i.protocol_uart_Init)
 <LI><a href="#[20]">protocol_uart_wakeup_handle</a> from protocol_uart.o(i.protocol_uart_wakeup_handle) referenced from protocol_uart.o(i.protocol_uart_ProcessEvent)
 <LI><a href="#[1a]">rf_calibrate1</a> from patch.o(i.rf_calibrate1) referenced from patch.o(i.init_config)
 <LI><a href="#[3f]">rf_phy_ini</a> from rf_phy_driver.o(i.rf_phy_ini) referenced from jump_table.o(jump_table_mem_area)
 <LI><a href="#[17]">rf_wakeup_handler</a> from main.o(i.rf_wakeup_handler) referenced from main.o(i.hal_rfphy_init)
 <LI><a href="#[0]">simpleProfileChangeCB</a> from blesmartperipheral.o(i.simpleProfileChangeCB) referenced 2 times from blesmartperipheral.o(.data)
 <LI><a href="#[c]">simpleProfile_HandleConnStatusCB</a> from simplegattprofile.o(i.simpleProfile_HandleConnStatusCB) referenced from simplegattprofile.o(i.SimpleProfile_AddService)
 <LI><a href="#[3a]">simpleProfile_ReadAttrCB</a> from simplegattprofile.o(i.simpleProfile_ReadAttrCB) referenced from simplegattprofile.o(.constdata)
 <LI><a href="#[3b]">simpleProfile_WriteAttrCB</a> from simplegattprofile.o(i.simpleProfile_WriteAttrCB) referenced from simplegattprofile.o(.constdata)
 <LI><a href="#[24]">temp_adc_evt</a> from temp.o(i.temp_adc_evt) referenced from temp.o(i.temp_adc_init)
 <LI><a href="#[18]">uart_hw_config</a> from uart.o(i.uart_hw_config) referenced from uart.o(i.hal_uart_init)
 <LI><a href="#[31]">userWatchDogProcessEvent</a> from user_watchdog.o(i.userWatchDogProcessEvent) referenced from osal_blesmartperipheral.o(.constdata)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[6a]"></a>__aeabi_uidivmod</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_DATATRANSFER_PROCESS (via Veneer)
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set (via Veneer)
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent (via Veneer)
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGradualEffect (via Veneer)
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeFlashCbfunc (via Veneer)
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb (via Veneer)
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_ms_intv (via Veneer)
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitMs (via Veneer)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;originalHsv2Rgb (via Veneer)
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBattLevel (via Veneer)
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_system_init (via Veneer)
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_wakeup_set (via Veneer)
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_master_init (via Veneer)
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printi (via Veneer)
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_config (via Veneer)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq (via Veneer)
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq (via Veneer)
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_tracking_check (via Veneer)
</UL>

<P><STRONG><a name="[16e]"></a>__aeabi_idivmod</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBattPercentByVoltMv (via Veneer)
</UL>

<P><STRONG><a name="[1e8]"></a>strlen</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf (via Veneer)
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_cmd (via Veneer)
</UL>

<P><STRONG><a name="[db]"></a>ATT_CompareUUID</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr (via Veneer)
</UL>

<P><STRONG><a name="[160]"></a>ATT_ErrorRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg (via Veneer)
</UL>

<P><STRONG><a name="[15c]"></a>ATT_ExchangeMTURsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg (via Veneer)
</UL>

<P><STRONG><a name="[158]"></a>ATT_ExecuteWriteRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessExecuteWriteReq (via Veneer)
</UL>

<P><STRONG><a name="[15b]"></a>ATT_FindByTypeValueRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq (via Veneer)
</UL>

<P><STRONG><a name="[166]"></a>ATT_PrepareWriteRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessPrepareWriteReq (via Veneer)
</UL>

<P><STRONG><a name="[15f]"></a>ATT_ReadBlobRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg (via Veneer)
</UL>

<P><STRONG><a name="[168]"></a>ATT_ReadByGrpTypeRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq (via Veneer)
</UL>

<P><STRONG><a name="[169]"></a>ATT_ReadByTypeRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq (via Veneer)
</UL>

<P><STRONG><a name="[16a]"></a>ATT_ReadMultiRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadMultiReq (via Veneer)
</UL>

<P><STRONG><a name="[15e]"></a>ATT_ReadRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg (via Veneer)
</UL>

<P><STRONG><a name="[16b]"></a>ATT_WriteRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessWriteReq (via Veneer)
</UL>

<P><STRONG><a name="[a4]"></a>GAP_Bond</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst (via Veneer)
</UL>

<P><STRONG><a name="[ba]"></a>GAP_EndDiscoverable</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter (via Veneer)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg (via Veneer)
</UL>

<P><STRONG><a name="[b0]"></a>GAP_GetParamValue</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_GetParameter (via Veneer)
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_startConnUpdate (via Veneer)
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessOSALMsg (via Veneer)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg (via Veneer)
</UL>

<P><STRONG><a name="[1db]"></a>GAP_Init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[b6]"></a>GAP_MakeDiscoverable</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent (via Veneer)
</UL>

<P><STRONG><a name="[c1]"></a>GAP_ParamsInit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit (via Veneer)
</UL>

<P><STRONG><a name="[c3]"></a>GAP_PeriDevMgrInit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit (via Veneer)
</UL>

<P><STRONG><a name="[28]"></a>GAP_ProcessEvent</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> osal_blesmartperipheral.o(.constdata)
</UL>
<P><STRONG><a name="[b2]"></a>GAP_RegisterForHCIMsgs</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_Init (via Veneer)
</UL>

<P><STRONG><a name="[ae]"></a>GAP_ResolvePrivateAddr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ResolveAddr (via Veneer)
</UL>

<P><STRONG><a name="[c2]"></a>GAP_SecParamsInit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit (via Veneer)
</UL>

<P><STRONG><a name="[aa]"></a>GAP_SendSlaveSecurityRequest</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst (via Veneer)
</UL>

<P><STRONG><a name="[bd]"></a>GAP_SetParamValue</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter (via Veneer)
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleSmartPeripheral_Init (via Veneer)
</UL>

<P><STRONG><a name="[a6]"></a>GAP_Signable</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst (via Veneer)
</UL>

<P><STRONG><a name="[c0]"></a>GAP_TerminateLinkReq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_TerminateConnection (via Veneer)
</UL>

<P><STRONG><a name="[bc]"></a>GAP_UpdateAdvertisingData</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter (via Veneer)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg (via Veneer)
</UL>

<P><STRONG><a name="[161]"></a>GATT_AppCompletedMsg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg (via Veneer)
</UL>

<P><STRONG><a name="[d9]"></a>GATT_FindHandle</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_WriteAttr (via Veneer)
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessWriteReq (via Veneer)
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadMultiReq (via Veneer)
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessPrepareWriteReq (via Veneer)
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg (via Veneer)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr (via Veneer)
</UL>

<P><STRONG><a name="[15a]"></a>GATT_FindHandleUUID</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq (via Veneer)
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq (via Veneer)
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq (via Veneer)
</UL>

<P><STRONG><a name="[da]"></a>GATT_FindNextAttr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq (via Veneer)
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq (via Veneer)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr (via Veneer)
</UL>

<P><STRONG><a name="[d5]"></a>GATT_Indication</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessCharCfg (via Veneer)
</UL>

<P><STRONG><a name="[1dc]"></a>GATT_Init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[d4]"></a>GATT_Notification</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessCharCfg (via Veneer)
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response (via Veneer)
</UL>

<P><STRONG><a name="[29]"></a>GATT_ProcessEvent</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> osal_blesmartperipheral.o(.constdata)
</UL>
<P><STRONG><a name="[ca]"></a>GATT_RegisterForReq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_Init (via Veneer)
</UL>

<P><STRONG><a name="[dd]"></a>GATT_RegisterService</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_RegisterService (via Veneer)
</UL>

<P><STRONG><a name="[e1]"></a>GATT_ServiceChangedInd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_SendServiceChangedInd (via Veneer)
</UL>

<P><STRONG><a name="[167]"></a>GATT_VerifyReadPermissions</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq (via Veneer)
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq (via Veneer)
</UL>

<P><STRONG><a name="[1d9]"></a>HCI_Init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[26]"></a>HCI_ProcessEvent</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> osal_blesmartperipheral.o(.constdata)
</UL>
<P><STRONG><a name="[b7]"></a>HCI_ReadRssiCmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent (via Veneer)
</UL>

<P><STRONG><a name="[154]"></a>L2CAP_ConnParamUpdateReq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_startConnUpdate (via Veneer)
</UL>

<P><STRONG><a name="[1da]"></a>L2CAP_Init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[27]"></a>L2CAP_ProcessEvent</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> osal_blesmartperipheral.o(.constdata)
</UL>
<P><STRONG><a name="[1d8]"></a>LL_Init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[25]"></a>LL_ProcessEvent</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> osal_blesmartperipheral.o(.constdata)
</UL>
<P><STRONG><a name="[216]"></a>LL_ReadBDADDR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systems_parameters_Init (via Veneer)
</UL>

<P><STRONG><a name="[e8]"></a>LL_evt_schedule</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetScanControl1 (via Veneer)
</UL>

<P><STRONG><a name="[1dd]"></a>SM_Init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
</UL>

<P><STRONG><a name="[2a]"></a>SM_ProcessEvent</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> osal_blesmartperipheral.o(.constdata)
</UL>
<P><STRONG><a name="[c4]"></a>SM_ResponderInit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit (via Veneer)
</UL>

<P><STRONG><a name="[6d]"></a>__ARM_common_switch8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_EventsPro_TestMode (via Veneer)
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_config_channel (via Veneer)
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleProfile_SetParameter (via Veneer)
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systems_param_Set_param (via Veneer)
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systems_param_Get_param (via Veneer)
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_SetParameter (via Veneer)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter (via Veneer)
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_GetParameter (via Veneer)
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetadvInt (via Veneer)
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetConnetInt (via Veneer)
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheralStateNotificationCB (via Veneer)
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb (via Veneer)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;originalHsv2Rgb (via Veneer)
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_GetBandrate (via Veneer)
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit (via Veneer)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg (via Veneer)
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ggs_ReadAttrCB (via Veneer)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rom_code_ini (via Veneer)
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleProfile_ReadAttrCB (via Veneer)
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_rxDcoc_cfg (via Veneer)
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupAdv1 (via Veneer)
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tp_cal (via Veneer)
</UL>

<P><STRONG><a name="[1a0]"></a>boot_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rom_code_ini (via Veneer)
</UL>

<P><STRONG><a name="[f6]"></a>clock_time_rtc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitRTCCount (via Veneer)
</UL>

<P><STRONG><a name="[19b]"></a>disableSleep</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock (via Veneer)
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_lock (via Veneer)
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_init (via Veneer)
</UL>

<P><STRONG><a name="[19c]"></a>enableSleep</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock (via Veneer)
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_init (via Veneer)
</UL>

<P><STRONG><a name="[cb]"></a>linkDB_Register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_app_AddService (via Veneer)
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleProfile_AddService (via Veneer)
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_Init (via Veneer)
</UL>

<P><STRONG><a name="[155]"></a>linkDB_State</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_HandleConnStatusCB (via Veneer)
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleProfile_HandleConnStatusCB (via Veneer)
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleConnStatusCB (via Veneer)
</UL>

<P><STRONG><a name="[1cd]"></a>llSetupDirectedAdvEvt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupAdv1 (via Veneer)
</UL>

<P><STRONG><a name="[1cf]"></a>llSetupNonConnectableAdvEvt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupAdv1 (via Veneer)
</UL>

<P><STRONG><a name="[1d0]"></a>llSetupScannableAdvEvt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupAdv1 (via Veneer)
</UL>

<P><STRONG><a name="[1ce]"></a>llSetupUndirectedAdvEvt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupAdv1 (via Veneer)
</UL>

<P><STRONG><a name="[ea]"></a>ll_debug_output</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetScanControl1 (via Veneer)
</UL>

<P><STRONG><a name="[1d1]"></a>ll_hw_get_tr_mode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_go1 (via Veneer)
</UL>

<P><STRONG><a name="[1ca]"></a>ll_hw_ign_rfifo</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupAdv1 (via Veneer)
</UL>

<P><STRONG><a name="[1cb]"></a>ll_hw_rst_rfifo</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupAdv1 (via Veneer)
</UL>

<P><STRONG><a name="[1cc]"></a>ll_hw_rst_tfifo</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupAdv1 (via Veneer)
</UL>

<P><STRONG><a name="[eb]"></a>ll_hw_set_rx_timeout</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetScanControl1 (via Veneer)
</UL>

<P><STRONG><a name="[96]"></a>osal_get_timeoutEx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_keysChange_handle (via Veneer)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter (via Veneer)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg (via Veneer)
</UL>

<P><STRONG><a name="[fd]"></a>osal_init_system</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main (via Veneer)
</UL>

<P><STRONG><a name="[a5]"></a>osal_isbufset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ResolveAddr (via Veneer)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst (via Veneer)
</UL>

<P><STRONG><a name="[de]"></a>osal_mem_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_RegisterService (via Veneer)
</UL>

<P><STRONG><a name="[1d5]"></a>osal_mem_set_heap</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[ad]"></a>osal_memcmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq (via Veneer)
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ResolveAddr (via Veneer)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrFindAddr (via Veneer)
</UL>

<P><STRONG><a name="[ac]"></a>osal_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_write (via Veneer)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_read (via Veneer)
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleProfile_SetParameter (via Veneer)
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateDeviceDefaultInfo (via Veneer)
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systems_param_Set_param (via Veneer)
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systems_param_Get_param (via Veneer)
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleProfile_GetParameter (via Veneer)
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_SetParameter (via Veneer)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter (via Veneer)
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_GetParameter (via Veneer)
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systems_parameters_Init (via Veneer)
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent (via Veneer)
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battReadAttrCB (via Veneer)
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadMultiReq (via Veneer)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq (via Veneer)
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq (via Veneer)
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessPrepareWriteReq (via Veneer)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr (via Veneer)
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ResolveAddr (via Veneer)
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrGetPublicAddr (via Veneer)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg (via Veneer)
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ggs_WriteAttrCB (via Veneer)
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ggs_ReadAttrCB (via Veneer)
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleProfile_WriteAttrCB (via Veneer)
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleProfile_ReadAttrCB (via Veneer)
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response (via Veneer)
</UL>

<P><STRONG><a name="[a3]"></a>osal_memset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_write (via Veneer)
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_SetParameter (via Veneer)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_Init (via Veneer)
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks (via Veneer)
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_SetNumPrepareWrites (via Veneer)
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq (via Veneer)
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessExecuteWriteReq (via Veneer)
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_HandleConnStatusCB (via Veneer)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr (via Veneer)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst (via Veneer)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg (via Veneer)
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response (via Veneer)
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_cmd (via Veneer)
</UL>

<P><STRONG><a name="[df]"></a>osal_msg_allocate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_SendCCCUpdatedEvent (via Veneer)
</UL>

<P><STRONG><a name="[b5]"></a>osal_msg_deallocate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_ProcessEvent (via Veneer)
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_ProcessEvent (via Veneer)
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent (via Veneer)
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleSmartPeripheral_ProcessEvent (via Veneer)
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessEvent (via Veneer)
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent (via Veneer)
</UL>

<P><STRONG><a name="[b3]"></a>osal_msg_receive</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_ProcessEvent (via Veneer)
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_ProcessEvent (via Veneer)
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent (via Veneer)
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleSmartPeripheral_ProcessEvent (via Veneer)
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessEvent (via Veneer)
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent (via Veneer)
</UL>

<P><STRONG><a name="[e0]"></a>osal_msg_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_SendCCCUpdatedEvent (via Veneer)
</UL>

<P><STRONG><a name="[fe]"></a>osal_pwrmgr_device</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main (via Veneer)
</UL>

<P><STRONG><a name="[bb]"></a>osal_set_event</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_adc_evt (via Veneer)
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keys_Debounce_Handle (via Veneer)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter (via Veneer)
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleSmartPeripheral_Init (via Veneer)
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_adc_evt (via Veneer)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg (via Veneer)
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupAdv1 (via Veneer)
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetScanControl1 (via Veneer)
</UL>

<P><STRONG><a name="[12f]"></a>osal_start_reload_timer</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent (via Veneer)
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffectEvent (via Veneer)
</UL>

<P><STRONG><a name="[ff]"></a>osal_start_system</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main (via Veneer)
</UL>

<P><STRONG><a name="[71]"></a>osal_start_timerEx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_keysChange_handle (via Veneer)
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_EventsPro_TestMode (via Veneer)
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_adc_init (via Veneer)
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_adc_evt (via Veneer)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter (via Veneer)
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheralStateNotificationCB (via Veneer)
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent (via Veneer)
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_Init (via Veneer)
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent (via Veneer)
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_adc_init (via Veneer)
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_adc_evt (via Veneer)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBatteryFully (via Veneer)
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entryFactoryMode (via Veneer)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entryBurnInTest (via Veneer)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_on (via Veneer)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_off (via Veneer)
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_wakeup_handle (via Veneer)
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;posedge_callback_wakeup (via Veneer)
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;negedge_callback_wakeup (via Veneer)
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_startConnUpdate (via Veneer)
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessOSALMsg (via Veneer)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg (via Veneer)
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleProfile_WriteAttrCB (via Veneer)
</UL>

<P><STRONG><a name="[83]"></a>osal_stop_timerEx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_adc_evt (via Veneer)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter (via Veneer)
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent (via Veneer)
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_adc_evt (via Veneer)
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopLightEffectEvent (via Veneer)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBatteryFully (via Veneer)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_off (via Veneer)
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SendUpdateParam (via Veneer)
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessOSALMsg (via Veneer)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg (via Veneer)
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleProfile_WriteAttrCB (via Veneer)
</UL>

<P><STRONG><a name="[dc]"></a>osal_strlen</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr (via Veneer)
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ggs_WriteAttrCB (via Veneer)
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ggs_ReadAttrCB (via Veneer)
</UL>

<P><STRONG><a name="[17d]"></a>pad_ds_control</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_config_channel (via Veneer)
</UL>

<P><STRONG><a name="[ec]"></a>read_current_fine_time</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetScanControl1 (via Veneer)
</UL>

<P><STRONG><a name="[1d2]"></a>set_max_length</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_go1 (via Veneer)
</UL>

<P><STRONG><a name="[1a1]"></a>wakeup_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom1Sym.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rom_code_ini (via Veneer)
</UL>

<P><STRONG><a name="[a]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm0.o(.text)
</UL>
<P><STRONG><a name="[220]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[46]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[64]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[221]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[222]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[223]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[224]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[225]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[2]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_armcm0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm0.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm0.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm0.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm0.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm0.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm0.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>AACI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AACI_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AACI_IRQHandler
</UL>

<P><STRONG><a name="[226]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[227]"></a>CHLCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[228]"></a>CLCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[229]"></a>CPU_CLCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[22a]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[22b]"></a>FLEXRAY_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[22c]"></a>I2C_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[22d]"></a>LIN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[22e]"></a>MCIA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[22f]"></a>MCIB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[230]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[231]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[232]"></a>TIM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[233]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[234]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[235]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[236]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[237]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[238]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[239]"></a>USBDC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[23a]"></a>USBHC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[23b]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm0.o(.text), UNUSED)

<P><STRONG><a name="[e5]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storeExceptionStts
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetDeviceInfoParams
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserInfo_NotifyStatus
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_SetParameter
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readExceptionStts
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_evt_hdl
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;txmit_buf_use_tx_buf
</UL>

<P><STRONG><a name="[23c]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[23d]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[4a]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserInfo_NotifyStatus
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[23e]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[23f]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[49]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetDeviceInfoParams
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_Init
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGradualEffect
</UL>

<P><STRONG><a name="[69]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_NotifyStatus
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_DATATRANSFER_PROCESS
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserInfo_NotifyStatus
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheralStateNotificationCB
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_Init
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleSmartPeripheral_Init
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadTargetRGBValue
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_bus_deinit
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateStrobeDisplay
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHuesDisplay
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTempDisplay
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBrightnessDisplay
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_init
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_adcc_cfg
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
</UL>

<P><STRONG><a name="[240]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[4b]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[21c]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateDeviceInfo2Flash
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateDeviceDefaultInfo
</UL>

<P><STRONG><a name="[152]"></a>__aeabi_uread4</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uread4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_ucds_block_byte
</UL>

<P><STRONG><a name="[241]"></a>__rt_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[242]"></a>_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_adc_evt
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleAfunc
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fireProcess
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coolUpdateByCoe
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRGBLamp
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTemp
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadTargetRGBValue
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadTargetColorTemperatureValue
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_ctrl
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chkLightEffectModeVoltCompensation
</UL>

<P><STRONG><a name="[4f]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_cal
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;originalHsv2Rgb
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chkLightEffectModeVoltCompensation
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatePWMDuty
</UL>

<P><STRONG><a name="[50]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGrdualCbfunc
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;originalHsv2Rgb
</UL>

<P><STRONG><a name="[102]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBattPercentByVolt
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_cal
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_adc_evt
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleAfunc
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fireProcess
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGrdualCbfunc
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coolUpdateByCoe
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_cal
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRGBLamp
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTemp
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadTargetRGBValue
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadTargetColorTemperatureValue
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHuesDisplay
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;originalHsv2Rgb
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_ctrl
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBattLevel
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battVoltCompensation
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatePWMDuty
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRgbOnly
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColor
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battReadAttrCB
</UL>

<P><STRONG><a name="[51]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightning1Process
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleAfunc
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fireProcess
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coolUpdateByCoe
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_cal
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRGBLamp
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTemp
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadTargetRGBValue
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadTargetColorTemperatureValue
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmData
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRedData
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenData
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolData
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBlueData
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;originalHsv2Rgb
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_ctrl
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chkLightEffectModeVoltCompensation
</UL>

<P><STRONG><a name="[109]"></a>__ARM_scalbnf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fscalb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_adc_evt
</UL>

<P><STRONG><a name="[243]"></a>scalbnf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fscalb.o(.text), UNUSED)

<P><STRONG><a name="[52]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fireProcess
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGrdualCbfunc
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getChargingCurrentByVolt
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battVoltCompensation
</UL>

<P><STRONG><a name="[57]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBattPercentByVoltMv
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_cal
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getChargingCurrentByVolt
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battVoltCompensation
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battReadAttrCB
</UL>

<P><STRONG><a name="[58]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightning1Process
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fireProcess
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getChargingCurrentByVolt
</UL>

<P><STRONG><a name="[59]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBattPercentByVoltMv
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_cal
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightning1Process
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fireProcess
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getChargingCurrentByVolt
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battVoltCompensation
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battMeasure
</UL>

<P><STRONG><a name="[5a]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBattPercentByVoltMv
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_cal
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGrdualCbfunc
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getChargingCurrentByVolt
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battVoltCompensation
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battReadAttrCB
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battMeasure
</UL>

<P><STRONG><a name="[187]"></a>__ARM_scalbn</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal
</UL>

<P><STRONG><a name="[244]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[5b]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGrdualCbfunc
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;originalHsv2Rgb
</UL>

<P><STRONG><a name="[5c]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_keysChange_handle
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_EventsPro_TestMode
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleAfunc
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fireProcess
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGrdualCbfunc
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coolUpdateByCoe
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_cal
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRGBLamp
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTemp
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadTargetRGBValue
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadTargetColorTemperatureValue
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmData
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRedData
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenData
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolData
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBlueData
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;originalHsv2Rgb
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_ctrl
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRgbOnly
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColor
</UL>

<P><STRONG><a name="[5d]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal
</UL>

<P><STRONG><a name="[5e]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBattPercentByVoltMv
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_cal
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightning1Process
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fireProcess
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGrdualCbfunc
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battVoltCompensation
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battMeasure
</UL>

<P><STRONG><a name="[10f]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBattPercentByVolt
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_cal
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGrdualCbfunc
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coolUpdateByCoe
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTemp
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadTargetColorTemperatureValue
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHuesDisplay
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uartCB_Handle
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatePWMDuty
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRgbOnly
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColor
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleProfile_ReadAttrCB
</UL>

<P><STRONG><a name="[5f]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2uiz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBattPercentByVoltMv
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_cal
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fireProcess
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battReadAttrCB
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battMeasure
</UL>

<P><STRONG><a name="[103]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fireProcess
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGrdualCbfunc
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBattLevel
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getChargingCurrentByVolt
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battVoltCompensation
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battReadAttrCB
</UL>

<P><STRONG><a name="[245]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[14a]"></a>__aeabi_cdcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fireProcess
</UL>

<P><STRONG><a name="[61]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightning1Process
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGrdualCbfunc
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getChargingCurrentByVolt
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battVoltCompensation
</UL>

<P><STRONG><a name="[246]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text), UNUSED)

<P><STRONG><a name="[121]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chkLightEffectModeVoltCompensation
</UL>

<P><STRONG><a name="[120]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_cal
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chkLightEffectModeVoltCompensation
</UL>

<P><STRONG><a name="[62]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[53]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[247]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[248]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[54]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[249]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[24a]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[4e]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[4d]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>

<P><STRONG><a name="[56]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[55]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[47]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[24b]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[24c]"></a>__I$use$semihosting$fputc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, iusesemip.o(.text), UNUSED)

<P><STRONG><a name="[24d]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[24e]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[24f]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, semi.o(.text), UNUSED)

<P><STRONG><a name="[1b3]"></a>BCD2ASC</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, user_utils.o(i.BCD2ASC))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BCD2ASC
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidMacAddrCheck
</UL>

<P><STRONG><a name="[65]"></a>Batt_AddService</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, battservice.o(i.Batt_AddService))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Batt_AddService &rArr; GATTServApp_RegisterService
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_RegisterService
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_InitCharCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleSmartPeripheral_Init
</UL>

<P><STRONG><a name="[211]"></a>CCS_SIMPLEGATT_DATA_PROCESS</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, command_center.o(i.CCS_SIMPLEGATT_DATA_PROCESS))
<BR><BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleProfileChangeCB
</UL>

<P><STRONG><a name="[7e]"></a>CCS_Systems_off</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, command_center.o(i.CCS_Systems_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = CCS_Systems_off &rArr; light_ctrl &rArr; startLightEffect &rArr; customizeGradualEffect &rArr; loadTargetPwmData &rArr; loadTargetRGBValue &rArr; hsb2Rgb &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_GetParameter
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffAllLightEffect
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setTemperature
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_ctrl
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_off
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_clear
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_TerminateConnection
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restartBattInfoCollection
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_keysChange_handle
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uartCB_Handle
</UL>

<P><STRONG><a name="[89]"></a>CCS_Systems_on</STRONG> (Thumb, 322 bytes, Stack size 24 bytes, command_center.o(i.CCS_Systems_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = CCS_Systems_on &rArr; CCS_DATATRANSFER_PROCESS &rArr; light_ctrl &rArr; startLightEffect &rArr; customizeGradualEffect &rArr; loadTargetPwmData &rArr; loadTargetRGBValue &rArr; hsb2Rgb &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_DATATRANSFER_PROCESS
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_get_percent
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateDeviceInfo2Flash
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_GetParameter
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateArrowDisplay
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reInitialLCD
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_clear
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restartBattInfoCollection
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_keysChange_handle
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_Init
</UL>

<P><STRONG><a name="[9f]"></a>DevInfo_AddService</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, devinfoservice.o(i.DevInfo_AddService))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DevInfo_AddService &rArr; GATTServApp_RegisterService
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_RegisterService
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleSmartPeripheral_Init
</UL>

<P><STRONG><a name="[a0]"></a>GAPBondMgr_LinkEst</STRONG> (Thumb, 316 bytes, Stack size 120 bytes, gapbondmgr.o(i.GAPBondMgr_LinkEst))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GAPBondMgr_LinkEst &rArr; GAPBondMgr_ResolveAddr &rArr; gapBondMgrGetPublicAddr &rArr; osal_snv_read
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_read
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_isbufset (via Veneer)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_UpdateCharCfg
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_SendServiceChangedInd
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_Signable (via Veneer)
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_SendSlaveSecurityRequest (via Veneer)
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_Bond (via Veneer)
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ResolveAddr
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrInvertCharCfgItem
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg
</UL>

<P><STRONG><a name="[a1]"></a>GAPBondMgr_ResolveAddr</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, gapbondmgr.o(i.GAPBondMgr_ResolveAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GAPBondMgr_ResolveAddr &rArr; gapBondMgrGetPublicAddr &rArr; osal_snv_read
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_read
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcmp (via Veneer)
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_isbufset (via Veneer)
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_ResolvePrivateAddr (via Veneer)
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrGetPublicAddr
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrFindAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst
</UL>

<P><STRONG><a name="[81]"></a>GAPRole_GetParameter</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, peripheral.o(i.GAPRole_GetParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GAPRole_GetParameter
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetParamValue (via Veneer)
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheralStateNotificationCB
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entryFactoryMode
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_on
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_off
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_cmd
</UL>

<P><STRONG><a name="[b1]"></a>GAPRole_Init</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, peripheral.o(i.GAPRole_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GAPRole_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_RegisterForHCIMsgs (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks
</UL>

<P><STRONG><a name="[2b]"></a>GAPRole_ProcessEvent</STRONG> (Thumb, 238 bytes, Stack size 32 bytes, peripheral.o(i.GAPRole_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GAPRole_ProcessEvent &rArr; gapRole_ProcessOSALMsg &rArr; gapRole_ProcessGAPMsg &rArr; GAPBondMgr_LinkEst &rArr; GAPBondMgr_ResolveAddr &rArr; gapBondMgrGetPublicAddr &rArr; osal_snv_read
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_receive (via Veneer)
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_deallocate (via Veneer)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_TerminateConnection
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_ReadRssiCmd (via Veneer)
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_MakeDiscoverable (via Veneer)
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SendUpdateParam
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_startConnUpdate
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessOSALMsg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal_blesmartperipheral.o(.constdata)
</UL>
<P><STRONG><a name="[b9]"></a>GAPRole_SendUpdateParam</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, peripheral.o(i.GAPRole_SendUpdateParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GAPRole_SendUpdateParam &rArr; gapRole_startConnUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_startConnUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent
</UL>

<P><STRONG><a name="[82]"></a>GAPRole_SetParameter</STRONG> (Thumb, 518 bytes, Stack size 32 bytes, peripheral.o(i.GAPRole_SetParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GAPRole_SetParameter &rArr; gapRole_startConnUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event (via Veneer)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_SetParamValue (via Veneer)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_get_timeoutEx (via Veneer)
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_UpdateAdvertisingData (via Veneer)
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_EndDiscoverable (via Veneer)
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_startConnUpdate
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheralStateNotificationCB
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleSmartPeripheral_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entryFactoryMode
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_on
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_off
</UL>

<P><STRONG><a name="[be]"></a>GAPRole_StartDevice</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, peripheral.o(i.GAPRole_StartDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GAPRole_StartDevice &rArr; GAP_DeviceInit
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DeviceInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleSmartPeripheral_ProcessEvent
</UL>

<P><STRONG><a name="[80]"></a>GAPRole_TerminateConnection</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, peripheral.o(i.GAPRole_TerminateConnection))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GAPRole_TerminateConnection
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_TerminateLinkReq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_off
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessOSALMsg
</UL>

<P><STRONG><a name="[bf]"></a>GAP_DeviceInit</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, gap.o(i.GAP_DeviceInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GAP_DeviceInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_ResponderInit (via Veneer)
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_SecParamsInit (via Veneer)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_PeriDevMgrInit (via Veneer)
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_ParamsInit (via Veneer)
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_StartDevice
</UL>

<P><STRONG><a name="[c5]"></a>GAP_GetConnetInt</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, blesmartperipheral.o(i.GAP_GetConnetInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GAP_GetConnetInt &rArr; systems_param_Get_param
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systems_param_Get_param
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleSmartPeripheral_Init
</UL>

<P><STRONG><a name="[c7]"></a>GAP_GetadvInt</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, blesmartperipheral.o(i.GAP_GetadvInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GAP_GetadvInt &rArr; systems_param_Get_param
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systems_param_Get_param
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleSmartPeripheral_Init
</UL>

<P><STRONG><a name="[d2]"></a>GATTServApp_FindAttr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gattservapp.o(i.GATTServApp_FindAttr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GATTServApp_FindAttr
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessCharCfg
</UL>

<P><STRONG><a name="[c8]"></a>GATTServApp_Init</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, gattservapp.o(i.GATTServApp_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GATTServApp_Init &rArr; gattServApp_SetNumPrepareWrites
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_SetNumPrepareWrites
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_InitCharCfg
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Register (via Veneer)
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_RegisterForReq (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks
</UL>

<P><STRONG><a name="[66]"></a>GATTServApp_InitCharCfg</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gattservapp.o(i.GATTServApp_InitCharCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GATTServApp_InitCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindCharCfgItem
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_app_AddService
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleProfile_AddService
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_AddService
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_Init
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_HandleConnStatusCB
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleProfile_HandleConnStatusCB
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleConnStatusCB
</UL>

<P><STRONG><a name="[cd]"></a>GATTServApp_ProcessCCCWriteReq</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gattservapp.o(i.GATTServApp_ProcessCCCWriteReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GATTServApp_ProcessCCCWriteReq &rArr; GATTServApp_SendCCCUpdatedEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_WriteCharCfg
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_SendCCCUpdatedEvent
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadCharCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battWriteAttrCB
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleProfile_WriteAttrCB
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_WriteAttrCB
</UL>

<P><STRONG><a name="[d1]"></a>GATTServApp_ProcessCharCfg</STRONG> (Thumb, 138 bytes, Stack size 296 bytes, gattservapp.o(i.GATTServApp_ProcessCharCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GATTServApp_ProcessCharCfg &rArr; GATTServApp_ReadAttr &rArr; gattServApp_FindAuthorizeAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_FindAttr
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_Notification (via Veneer)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_Indication (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleProfile_SetParameter
</UL>

<P><STRONG><a name="[2c]"></a>GATTServApp_ProcessEvent</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gattservapp.o(i.GATTServApp_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GATTServApp_ProcessEvent &rArr; gattServApp_ProcessMsg &rArr; gattServApp_ProcessReadByGrpTypeReq &rArr; GATTServApp_ReadAttr &rArr; gattServApp_FindAuthorizeAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_receive (via Veneer)
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_deallocate (via Veneer)
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal_blesmartperipheral.o(.constdata)
</UL>
<P><STRONG><a name="[d3]"></a>GATTServApp_ReadAttr</STRONG> (Thumb, 540 bytes, Stack size 48 bytes, gattservapp.o(i.GATTServApp_ReadAttr))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GATTServApp_ReadAttr &rArr; gattServApp_FindAuthorizeAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_CompareUUID (via Veneer)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindServiceCBs
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindAuthorizeAttrCB
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindNextAttr (via Veneer)
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_strlen (via Veneer)
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadCharCfg
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessCharCfg
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadMultiReq
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq
</UL>

<P><STRONG><a name="[ce]"></a>GATTServApp_ReadCharCfg</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gattservapp.o(i.GATTServApp_ReadCharCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GATTServApp_ReadCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindCharCfgItem
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_SendServiceChangedInd
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessCCCWriteReq
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response
</UL>

<P><STRONG><a name="[67]"></a>GATTServApp_RegisterService</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, gattservapp.o(i.GATTServApp_RegisterService))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GATTServApp_RegisterService
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_alloc (via Veneer)
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_RegisterService (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_app_AddService
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleProfile_AddService
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_AddService
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DevInfo_AddService
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_AddService
</UL>

<P><STRONG><a name="[d0]"></a>GATTServApp_SendCCCUpdatedEvent</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, gattservapp.o(i.GATTServApp_SendCCCUpdatedEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GATTServApp_SendCCCUpdatedEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_send (via Veneer)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_allocate (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessCCCWriteReq
</UL>

<P><STRONG><a name="[a9]"></a>GATTServApp_SendServiceChangedInd</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, gattservapp.o(i.GATTServApp_SendServiceChangedInd))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GATTServApp_SendServiceChangedInd &rArr; GATTServApp_ReadCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadCharCfg
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_ServiceChangedInd (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst
</UL>

<P><STRONG><a name="[a8]"></a>GATTServApp_UpdateCharCfg</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gattservapp.o(i.GATTServApp_UpdateCharCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GATTServApp_UpdateCharCfg &rArr; GATTServApp_WriteAttr
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_WriteAttr
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst
</UL>

<P><STRONG><a name="[e2]"></a>GATTServApp_WriteAttr</STRONG> (Thumb, 66 bytes, Stack size 48 bytes, gattservapp.o(i.GATTServApp_WriteAttr))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GATTServApp_WriteAttr
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindServiceCBs
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessWriteReq
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessExecuteWriteReq
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_UpdateCharCfg
</UL>

<P><STRONG><a name="[cf]"></a>GATTServApp_WriteCharCfg</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gattservapp.o(i.GATTServApp_WriteCharCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GATTServApp_WriteCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindCharCfgItem
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessCCCWriteReq
</UL>

<P><STRONG><a name="[e3]"></a>GGS_AddService</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gapgattserver.o(i.GGS_AddService))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GGS_AddService &rArr; GATTServApp_RegisterService
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_RegisterService
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleSmartPeripheral_Init
</UL>

<P><STRONG><a name="[e4]"></a>GGS_SetParameter</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, gapgattserver.o(i.GGS_SetParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GGS_SetParameter &rArr; ggs_SetAttrWPermit
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ggs_SetAttrWPermit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleSmartPeripheral_Init
</UL>

<P><STRONG><a name="[12c]"></a>GetgapProfileState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, blesmartperipheral.o(i.GetgapProfileState))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
</UL>

<P><STRONG><a name="[7b]"></a>HW_RESET_MCU</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, command_center.o(i.HW_RESET_MCU))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HW_RESET_MCU &rArr; storeExceptionStts &rArr; writeFlashData &rArr; flash_write_ucds_block_byte &rArr; flash_write_ucds &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storeExceptionStts
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_keysChange_handle
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_EventsPro_TestMode
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_adc_init
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_adc_init
</UL>

<P><STRONG><a name="[1b]"></a>LL_SetScanControl1</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, patch.o(i.LL_SetScanControl1))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LL_SetScanControl1 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event (via Veneer)
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_current_fine_time (via Veneer)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_set_rx_timeout (via Veneer)
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_debug_output (via Veneer)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_evt_schedule (via Veneer)
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.init_config)
</UL>
<P><STRONG><a name="[9a]"></a>OLED_ShowNum</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, display.o(i.OLED_ShowNum))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_keysChange_handle
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;versionDisplay
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entryFactoryMode
</UL>

<P><STRONG><a name="[79]"></a>OLED_ShowString</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, display.o(i.OLED_ShowString))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_EventsPro_TestMode
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;versionDisplay
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entryBurnInTest
</UL>

<P><STRONG><a name="[ed]"></a>ProgramWord</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, flash_ext.o(i.ProgramWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_spif_flash_write
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_spif_flash_write
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_internal_bus_busy
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_ucds
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snvwr
</UL>

<P><STRONG><a name="[f1]"></a>SimpleProfile_AddService</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, simplegattprofile.o(i.SimpleProfile_AddService))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SimpleProfile_AddService &rArr; GATTServApp_RegisterService
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_RegisterService
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_InitCharCfg
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Register (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleSmartPeripheral_Init
</UL>

<P><STRONG><a name="[f2]"></a>SimpleProfile_GetParameter</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, simplegattprofile.o(i.SimpleProfile_GetParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SimpleProfile_GetParameter
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleProfileChangeCB
</UL>

<P><STRONG><a name="[117]"></a>SimpleProfile_RegisterAppCBs</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, simplegattprofile.o(i.SimpleProfile_RegisterAppCBs))
<BR><BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleSmartPeripheral_Init
</UL>

<P><STRONG><a name="[7d]"></a>SimpleProfile_SetParameter</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, simplegattprofile.o(i.SimpleProfile_SetParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = SimpleProfile_SetParameter &rArr; GATTServApp_ProcessCharCfg &rArr; GATTServApp_ReadAttr &rArr; gattServApp_FindAuthorizeAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessCharCfg
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_NotifyStatus
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserInfo_NotifyStatus
</UL>

<P><STRONG><a name="[9]"></a>SystemInit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_armcm0.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm0.o(.text)
</UL>
<P><STRONG><a name="[f4]"></a>WaitMs</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, common.o(i.WaitMs))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WaitMs &rArr; WaitRTCCount
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitRTCCount
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_config
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_on
</UL>

<P><STRONG><a name="[f5]"></a>WaitRTCCount</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, common.o(i.WaitRTCCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WaitRTCCount
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_time_rtc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitMs
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_tracking_check
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_calibration
</UL>

<P><STRONG><a name="[21d]"></a>Watchdog_ProcessEvent</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, watchdog.o(i.Watchdog_ProcessEvent))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;userWatchDogProcessEvent
</UL>

<P><STRONG><a name="[f7]"></a>__0printf$8</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[250]"></a>__1printf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)

<P><STRONG><a name="[e9]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetScanControl1
</UL>

<P><STRONG><a name="[f9]"></a>__0sprintf$8</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[251]"></a>__1sprintf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)

<P><STRONG><a name="[1ed]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateStrobeDisplay
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHuesDisplay
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTempDisplay
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBrightnessDisplay
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_cmd
</UL>

<P><STRONG><a name="[63]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[252]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[253]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[254]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[fc]"></a>app_main</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, blesmartperipheral_main.o(i.app_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_main
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_system (via Veneer)
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_pwrmgr_device (via Veneer)
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_init_system (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f5]"></a>arry_sort</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, patch.o(i.arry_sort))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = arry_sort
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_tracking_check
</UL>

<P><STRONG><a name="[104]"></a>battVoltCompensation</STRONG> (Thumb, 500 bytes, Stack size 40 bytes, command_center.o(i.battVoltCompensation))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = battVoltCompensation &rArr; getChargingCurrentByVolt &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getLightStts
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getChargingCurrentByVolt
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBattLevel
</UL>

<P><STRONG><a name="[125]"></a>batt_RegisterCBs_Value</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, battery.o(i.batt_RegisterCBs_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = batt_RegisterCBs_Value
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_Init
</UL>

<P><STRONG><a name="[8a]"></a>batt_get_percent</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, battery.o(i.batt_get_percent))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_on
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battMeasure
</UL>

<P><STRONG><a name="[97]"></a>batt_get_voltage</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, battery.o(i.batt_get_voltage))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_keysChange_handle
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uartCB_Handle
</UL>

<P><STRONG><a name="[110]"></a>batt_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, battery.o(i.batt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = batt_init &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_Init
</UL>

<P><STRONG><a name="[112]"></a>batt_measure</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, battery.o(i.batt_measure))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = batt_measure &rArr; batt_adc_init &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_adc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entryFactoryMode
</UL>

<P><STRONG><a name="[113]"></a>batterDisplay</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, display.o(i.batterDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = batterDisplay &rArr; lcdRectColorDraw &rArr; lcdDrawLine &rArr; lcdDrawPoint &rArr; lcd_set_xy &rArr; write_data &rArr; hal_spi_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdRectColorDraw
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
</UL>

<P><STRONG><a name="[116]"></a>bleSmartPeripheral_Init</STRONG> (Thumb, 360 bytes, Stack size 128 bytes, blesmartperipheral.o(i.bleSmartPeripheral_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = bleSmartPeripheral_Init &rArr; ota_app_AddService &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systems_param_Get_param
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_app_AddService
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event (via Veneer)
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keys_RegisterDebounceCBs
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleProfile_RegisterAppCBs
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleProfile_AddService
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_SetParameter
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_AddService
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_SetParamValue (via Veneer)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DevInfo_AddService
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_AddService
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetadvInt
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetConnetInt
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks
</UL>

<P><STRONG><a name="[2d]"></a>bleSmartPeripheral_ProcessEvent</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, blesmartperipheral.o(i.bleSmartPeripheral_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bleSmartPeripheral_ProcessEvent &rArr; GAPRole_StartDevice &rArr; GAP_DeviceInit
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_receive (via Veneer)
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_deallocate (via Veneer)
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keys_Debounce_Handle
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_StartDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal_blesmartperipheral.o(.constdata)
</UL>
<P><STRONG><a name="[136]"></a>checkFlashLoopOver</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, user_lighteffect.o(i.checkFlashLoopOver))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeFlashCbfunc
</UL>

<P><STRONG><a name="[11b]"></a>check_chip_id</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, flash_ext.o(i.check_chip_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = check_chip_id &rArr; read_chip_id &rArr; chip_id_one_bit_hot_convter
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_chip_id
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_config
</UL>

<P><STRONG><a name="[11d]"></a>check_chip_mAddr</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, flash_ext.o(i.check_chip_mAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = check_chip_mAddr &rArr; read_chip_mAddr &rArr; chip_id_one_bit_hot_convter
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_chip_mAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_config
</UL>

<P><STRONG><a name="[ee]"></a>check_internal_bus_busy</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, flash_ext.o(i.check_internal_bus_busy))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramWord
</UL>

<P><STRONG><a name="[11f]"></a>chkLightEffectModeVoltCompensation</STRONG> (Thumb, 260 bytes, Stack size 40 bytes, command_center.o(i.chkLightEffectModeVoltCompensation))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = chkLightEffectModeVoltCompensation &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
</UL>

<P><STRONG><a name="[184]"></a>clk_gate_disable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, clock.o(i.clk_gate_disable))
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_bus_deinit
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_stop
</UL>

<P><STRONG><a name="[17b]"></a>clk_gate_enable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, clock.o(i.clk_gate_enable))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_config_channel
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_bus_init
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_init
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_config
</UL>

<P><STRONG><a name="[219]"></a>clk_pclk</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, clock.o(i.clk_pclk))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_config
</UL>

<P><STRONG><a name="[21a]"></a>clk_reset</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, clock.o(i.clk_reset))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_config
</UL>

<P><STRONG><a name="[123]"></a>command_center_Init</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, command_center.o(i.command_center_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = command_center_Init &rArr; CCS_Systems_on &rArr; CCS_DATATRANSFER_PROCESS &rArr; light_ctrl &rArr; startLightEffect &rArr; customizeGradualEffect &rArr; loadTargetPwmData &rArr; loadTargetRGBValue &rArr; hsb2Rgb &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_init
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_RegisterCBs_Value
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_init
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_RegisterCBs_Value
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readExceptionStts
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keys_RegisterCBs
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidMacAddrCheck
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_register
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_Init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_on
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks
</UL>

<P><STRONG><a name="[30]"></a>command_center_ProcessEvent</STRONG> (Thumb, 1330 bytes, Stack size 48 bytes, command_center.o(i.command_center_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = command_center_ProcessEvent &rArr; CCS_NotifyStatus &rArr; SimpleProfile_SetParameter &rArr; GATTServApp_ProcessCharCfg &rArr; GATTServApp_ReadAttr &rArr; gattServApp_FindAuthorizeAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_keysChange_handle
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_NotifyStatus
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_EventsPro_TestMode
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_DATATRANSFER_PROCESS
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_measure
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_get_voltage
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_get_percent
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_receive (via Veneer)
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_deallocate (via Veneer)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetgapProfileState
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHotDisplay
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBLEDisplay
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_measure
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_get_value
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reInitialLCD
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_reload_timer (via Veneer)
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightEffectFunc
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_off
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_clear
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayFloat
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batterDisplay
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopCharging
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startCharging
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBatteryFully
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBattLevel
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chkLightEffectModeVoltCompensation
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_off
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal_blesmartperipheral.o(.constdata)
</UL>
<P><STRONG><a name="[133]"></a>coolUpdateByCoe</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, user_lighteffect.o(i.coolUpdateByCoe))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = coolUpdateByCoe &rArr; setCoolData &rArr; setCoolDuty &rArr; updatePWMDuty &rArr; hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolData
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightning1Process
</UL>

<P><STRONG><a name="[10]"></a>customizeFlashCbfunc</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, user_lighteffect.o(i.customizeFlashCbfunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = customizeFlashCbfunc &rArr; updateRGBLamp &rArr; hsb2Rgb &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffColorTempLamp
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkFlashLoopOver
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRGBLamp
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTemp
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffRGBLamp
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeFlashEffect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_lighteffect.o(i.customizeFlashEffect)
</UL>
<P><STRONG><a name="[139]"></a>customizeFlashEffect</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, user_lighteffect.o(i.customizeFlashEffect))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = customizeFlashEffect &rArr; customizeFlashCbfunc &rArr; updateRGBLamp &rArr; hsb2Rgb &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeFlashCbfunc
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
</UL>

<P><STRONG><a name="[11]"></a>customizeFlashEndCbfunc</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, user_lighteffect.o(i.customizeFlashEndCbfunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = customizeFlashEndCbfunc &rArr; customizeGrdualEndCbfunc &rArr; light_off &rArr; hal_pwm_ch_stop &rArr; hal_pwm_destroy &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGrdualEndCbfunc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_lighteffect.o(i.customizeFlashEffect)
</UL>
<P><STRONG><a name="[13a]"></a>customizeGradualEffect</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, user_lighteffect.o(i.customizeGradualEffect))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = customizeGradualEffect &rArr; loadTargetPwmData &rArr; loadTargetRGBValue &rArr; hsb2Rgb &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadTargetPwmData
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGrdualCbfunc
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
</UL>

<P><STRONG><a name="[12]"></a>customizeGrdualCbfunc</STRONG> (Thumb, 230 bytes, Stack size 16 bytes, user_lighteffect.o(i.customizeGrdualCbfunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = customizeGrdualCbfunc &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmData
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRedData
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenData
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolData
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBlueData
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGradualEffect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_lighteffect.o(i.customizeGradualEffect)
</UL>
<P><STRONG><a name="[13]"></a>customizeGrdualEndCbfunc</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, user_lighteffect.o(i.customizeGrdualEndCbfunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = customizeGrdualEndCbfunc &rArr; light_off &rArr; hal_pwm_ch_stop &rArr; hal_pwm_destroy &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_off
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmData
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRedData
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenData
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolData
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBlueData
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopLightEffectEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeFlashEndCbfunc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_lighteffect.o(i.customizeGradualEffect)
</UL>
<P><STRONG><a name="[f0]"></a>disable_spif_flash_write</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, flash_ext.o(i.disable_spif_flash_write))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramWord
</UL>

<P><STRONG><a name="[99]"></a>displayFactoryInfo</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, display.o(i.displayFactoryInfo))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_keysChange_handle
</UL>

<P><STRONG><a name="[7a]"></a>displayFloat</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, display.o(i.displayFloat))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_keysChange_handle
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_EventsPro_TestMode
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
</UL>

<P><STRONG><a name="[8d]"></a>displaySystemMenu</STRONG> (Thumb, 332 bytes, Stack size 24 bytes, display.o(i.displaySystemMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = displaySystemMenu &rArr; updateBrightnessDisplay &rArr; updateHuesDisplay &rArr; lcdDrawSingleCharGbk16 &rArr; lcdDrawFontGbk16 &rArr; lcdDrawPoint &rArr; lcd_set_xy &rArr; write_data &rArr; hal_spi_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logoDisplay
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdRectColorDraw
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawWidthTimesHeight
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawLine
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawFontGbk16
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateStrobeDisplay
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSceneDisplay
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHuesDisplay
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTempDisplay
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBrightnessDisplay
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_clear
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batterDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_on
</UL>

<P><STRONG><a name="[128]"></a>display_Init</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, display.o(i.display_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = display_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_Init
</UL>

<P><STRONG><a name="[ef]"></a>enable_spif_flash_write</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, flash_ext.o(i.enable_spif_flash_write))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramWord
</UL>

<P><STRONG><a name="[78]"></a>entryBurnInTest</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, command_center.o(i.entryBurnInTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = entryBurnInTest &rArr; lcd_on &rArr; reInitialLCD &rArr; hal_spi_bus_init &rArr; hal_spi_pin_init &rArr; hal_gpio_fmux_set
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_on
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_EventsPro_TestMode
</UL>

<P><STRONG><a name="[6e]"></a>entryFactoryMode</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, command_center.o(i.entryFactoryMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = entryFactoryMode &rArr; batt_measure &rArr; batt_adc_init &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_measure
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_GetParameter
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateArrowDisplay
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_on
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowNum
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;versionDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_EventsPro_TestMode
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uartCB_Handle
</UL>

<P><STRONG><a name="[77]"></a>factoryModeColorTempOn</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, command_center.o(i.factoryModeColorTempOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = factoryModeColorTempOn &rArr; CCS_DATATRANSFER_PROCESS &rArr; light_ctrl &rArr; startLightEffect &rArr; customizeGradualEffect &rArr; loadTargetPwmData &rArr; loadTargetRGBValue &rArr; hsb2Rgb &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_DATATRANSFER_PROCESS
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_EventsPro_TestMode
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uartCB_Handle
</UL>

<P><STRONG><a name="[76]"></a>factoryModeRGBOn</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, command_center.o(i.factoryModeRGBOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = factoryModeRGBOn &rArr; CCS_DATATRANSFER_PROCESS &rArr; light_ctrl &rArr; startLightEffect &rArr; customizeGradualEffect &rArr; loadTargetPwmData &rArr; loadTargetRGBValue &rArr; hsb2Rgb &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_DATATRANSFER_PROCESS
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_EventsPro_TestMode
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uartCB_Handle
</UL>

<P><STRONG><a name="[21]"></a>fireProcess</STRONG> (Thumb, 1284 bytes, Stack size 72 bytes, user_lighteffect.o(i.fireProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = fireProcess &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmData
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRgbOnly
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_lighteffect.o(i.sceneFire)
</UL>
<P><STRONG><a name="[23]"></a>flashMode2StyleAfunc</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, user_lighteffect.o(i.flashMode2StyleAfunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = flashMode2StyleAfunc &rArr; hsb2Rgb &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_lighteffect.o(i.set2FlashMode2StyleA)
</UL>
<P><STRONG><a name="[14c]"></a>flash_erase_ucds</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, flash.o(i.flash_erase_ucds))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = flash_erase_ucds &rArr; flash_sector_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readExceptionStts
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeFlashData
</UL>

<P><STRONG><a name="[14f]"></a>flash_read_ucds</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, flash.o(i.flash_read_ucds))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_ucds_block_byte
</UL>

<P><STRONG><a name="[14e]"></a>flash_read_ucds_block_byte</STRONG> (Thumb, 128 bytes, Stack size 20 bytes, flash.o(i.flash_read_ucds_block_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = flash_read_ucds_block_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_ucds
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readFlashData
</UL>

<P><STRONG><a name="[14d]"></a>flash_sector_erase</STRONG> (Thumb, 74 bytes, Stack size 4 bytes, flash_ext.o(i.flash_sector_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = flash_sector_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_spif_flash_write
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_spif_flash_write
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_internal_bus_busy
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_write
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_ucds
</UL>

<P><STRONG><a name="[150]"></a>flash_write_ucds</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, flash.o(i.flash_write_ucds))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = flash_write_ucds &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramWord
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_ucds_block_byte
</UL>

<P><STRONG><a name="[151]"></a>flash_write_ucds_block_byte</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, flash.o(i.flash_write_ucds_block_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = flash_write_ucds_block_byte &rArr; flash_write_ucds &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_ucds
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeFlashData
</UL>

<P><STRONG><a name="[d]"></a>fputc</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, fputc.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0printf$8)
</UL>
<P><STRONG><a name="[1b4]"></a>free</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storeExceptionStts
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readExceptionStts
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidMacAddrCheck
</UL>

<P><STRONG><a name="[10c]"></a>getAdcStts</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, adc.o(i.getAdcStts))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_adc_init
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_adc_init
</UL>

<P><STRONG><a name="[16c]"></a>getBattPercentByVolt</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, battery.o(i.getBattPercentByVolt))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = getBattPercentByVolt &rArr; getBattPercentByVoltMv &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBattPercentByVoltMv
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBattLevel
</UL>

<P><STRONG><a name="[16d]"></a>getBattPercentByVoltMv</STRONG> (Thumb, 156 bytes, Stack size 8 bytes, battery.o(i.getBattPercentByVoltMv))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = getBattPercentByVoltMv &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBattPercentByVolt
</UL>

<P><STRONG><a name="[105]"></a>getChargingCurrentByVolt</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, command_center.o(i.getChargingCurrentByVolt))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = getChargingCurrentByVolt &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battVoltCompensation
</UL>

<P><STRONG><a name="[101]"></a>getCompensationVolt</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, command_center.o(i.getCompensationVolt))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battReadAttrCB
</UL>

<P><STRONG><a name="[106]"></a>getLightStts</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, light.o(i.getLightStts))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBattLevel
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battVoltCompensation
</UL>

<P><STRONG><a name="[1b1]"></a>getSystemId</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, systems_parameters.o(i.getSystemId))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidMacAddrCheck
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uartCB_Handle
</UL>

<P><STRONG><a name="[215]"></a>getSystemStts</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, command_center.o(i.getSystemStts))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storeExceptionStts
</UL>

<P><STRONG><a name="[18b]"></a>gpio_pin0to3_pin31to34_control</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gpio.o(i.gpio_pin0to3_pin31to34_control))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_pin_init
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_pin_deinit
</UL>

<P><STRONG><a name="[45]"></a>hal_ADC_IRQHandler</STRONG> (Thumb, 186 bytes, Stack size 104 bytes, adc.o(i.hal_ADC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = hal_ADC_IRQHandler &rArr; hal_adc_stop &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_stop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[44]"></a>hal_GPIO_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gpio.o(i.hal_GPIO_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hal_GPIO_IRQHandler &rArr; gpioin_event &rArr; gpio_interrupt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioin_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[42]"></a>hal_SPI0_IRQHandler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, spi.o(i.hal_SPI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hal_SPI0_IRQHandler &rArr; spi_int_handle &rArr; hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spis_int_handle
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_int_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[43]"></a>hal_SPI1_IRQHandler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, spi.o(i.hal_SPI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hal_SPI1_IRQHandler &rArr; spi_int_handle &rArr; hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spis_int_handle
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_int_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[41]"></a>hal_UART0_IRQHandler</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, uart.o(i.hal_UART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_UART0_IRQHandler &rArr; irq_rx_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irq_tx_empty_handler
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irq_rx_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[10d]"></a>hal_adc_config_channel</STRONG> (Thumb, 612 bytes, Stack size 40 bytes, adc.o(i.hal_adc_config_channel))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hal_adc_config_channel &rArr; hal_gpio_cfg_analog_io &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_gate_enable
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pad_ds_control (via Veneer)
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sampling_resolution
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_cfg_analog_io
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_adc_init
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_adc_init
</UL>

<P><STRONG><a name="[180]"></a>hal_adc_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, adc.o(i.hal_adc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_adc_init &rArr; hal_pwrmgr_register
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_register
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_adcc_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10e]"></a>hal_adc_start</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, adc.o(i.hal_adc_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_adc_start &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_adc_init
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_adc_init
</UL>

<P><STRONG><a name="[176]"></a>hal_adc_stop</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, adc.o(i.hal_adc_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = hal_adc_stop &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_systick
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_ms_intv
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_gate_disable
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_adcc_cfg
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_cfg_analog_io
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_ADC_IRQHandler
</UL>

<P><STRONG><a name="[108]"></a>hal_adc_value_cal</STRONG> (Thumb, 294 bytes, Stack size 48 bytes, adc.o(i.hal_adc_value_cal))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = hal_adc_value_cal &rArr; __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbAbsSubUint16
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_adc_evt
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_adc_evt
</UL>

<P><STRONG><a name="[1f6]"></a>hal_gpio_DS_control</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gpio.o(i.hal_gpio_DS_control))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reInitialLCD
</UL>

<P><STRONG><a name="[17e]"></a>hal_gpio_cfg_analog_io</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gpio.o(i.hal_gpio_cfg_analog_io))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hal_gpio_cfg_analog_io &rArr; hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_config_channel
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_stop
</UL>

<P><STRONG><a name="[21e]"></a>hal_gpio_fast_write</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, gpio.o(i.hal_gpio_fast_write))
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_cmd
</UL>

<P><STRONG><a name="[189]"></a>hal_gpio_fmux</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gpio.o(i.hal_gpio_fmux))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux_set
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_int_handle
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_pin_deinit
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_config
</UL>

<P><STRONG><a name="[188]"></a>hal_gpio_fmux_set</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, gpio.o(i.hal_gpio_fmux_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = hal_gpio_fmux_set
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_wakeup_handle
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_pin_init
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_open_channel
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_config
</UL>

<P><STRONG><a name="[18a]"></a>hal_gpio_init</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, gpio.o(i.hal_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_gpio_init &rArr; hal_pwrmgr_register
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_register
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[124]"></a>hal_gpio_pin_init</STRONG> (Thumb, 82 bytes, Stack size 12 bytes, gpio.o(i.hal_gpio_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = hal_gpio_pin_init
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_pin0to3_pin31to34_control
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_ProcessEvent
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_Init
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_Init
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_Init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_off
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_config
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reInitialLCD
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entryFactoryMode
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entryBurnInTest
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_disable
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keys_Init
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_stop
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_enable
</UL>

<P><STRONG><a name="[111]"></a>hal_gpio_pull_set</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gpio.o(i.hal_gpio_pull_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_gpio_pull_set
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_init
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_ProcessEvent
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_Init
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_init
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_clock_config
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keys_Init
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_stop
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_cfg_analog_io
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rfphy_init
</UL>

<P><STRONG><a name="[94]"></a>hal_gpio_read</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, gpio.o(i.hal_gpio_read))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_keysChange_handle
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keys_read
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battVoltCompensation
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wakeup_handler
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_sleep_handler
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_enable
</UL>

<P><STRONG><a name="[16f]"></a>hal_gpio_wakeup_set</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, gpio.o(i.hal_gpio_wakeup_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_gpio_wakeup_set
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_ProcessEvent
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_Init
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_sleep_handler
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keys_Init
</UL>

<P><STRONG><a name="[87]"></a>hal_gpio_write</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, gpio.o(i.hal_gpio_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_gpio_write &rArr; hal_gpio_pin_init
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_RESET_MCU
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_off
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logoDisplay
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_config
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwmInit
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_update
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entryFactoryMode
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entryBurnInTest
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_on
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_off
</UL>

<P><STRONG><a name="[18c]"></a>hal_gpioin_disable</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gpio.o(i.hal_gpioin_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = hal_gpioin_disable &rArr; hal_gpio_pin_init
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_register
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_wakeup_handle
</UL>

<P><STRONG><a name="[172]"></a>hal_gpioin_enable</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, gpio.o(i.hal_gpioin_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = hal_gpioin_enable &rArr; hal_gpio_pin_init
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wakeup_handler
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_register
</UL>

<P><STRONG><a name="[18e]"></a>hal_gpioin_register</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, gpio.o(i.hal_gpioin_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = hal_gpioin_register &rArr; hal_gpioin_enable &rArr; hal_gpio_pin_init
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_disable
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_ProcessEvent
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_Init
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keys_Init
</UL>

<P><STRONG><a name="[183]"></a>hal_ms_intv</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, clock.o(i.hal_ms_intv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_ms_intv
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logoDisplay
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_stop
</UL>

<P><STRONG><a name="[18f]"></a>hal_pwm_ch_start</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, pwm.o(i.hal_pwm_ch_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = hal_pwm_ch_start &rArr; hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_start
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_set_count_val
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_open_channel
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_init
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwmInit
</UL>

<P><STRONG><a name="[194]"></a>hal_pwm_ch_stop</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, pwm.o(i.hal_pwm_ch_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = hal_pwm_ch_stop &rArr; hal_pwm_destroy &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_stop
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_destroy
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_close_channel
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_off
</UL>

<P><STRONG><a name="[197]"></a>hal_pwm_close_channel</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, pwm.o(i.hal_pwm_close_channel))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = hal_pwm_close_channel &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_ch_stop
</UL>

<P><STRONG><a name="[196]"></a>hal_pwm_destroy</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, pwm.o(i.hal_pwm_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = hal_pwm_destroy &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_ch_stop
</UL>

<P><STRONG><a name="[190]"></a>hal_pwm_init</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, pwm.o(i.hal_pwm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = hal_pwm_init &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_register
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_gate_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_ch_start
</UL>

<P><STRONG><a name="[198]"></a>hal_pwm_module_init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, pwm.o(i.hal_pwm_module_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hal_pwm_module_init &rArr; hal_pwm_stop &rArr; hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwmInit
</UL>

<P><STRONG><a name="[192]"></a>hal_pwm_open_channel</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, pwm.o(i.hal_pwm_open_channel))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = hal_pwm_open_channel &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux_set
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_ch_start
</UL>

<P><STRONG><a name="[191]"></a>hal_pwm_set_count_val</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, pwm.o(i.hal_pwm_set_count_val))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_ch_start
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatePWMDuty
</UL>

<P><STRONG><a name="[193]"></a>hal_pwm_start</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, pwm.o(i.hal_pwm_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_pwm_start &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_ch_start
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_update
</UL>

<P><STRONG><a name="[195]"></a>hal_pwm_stop</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, pwm.o(i.hal_pwm_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_pwm_stop &rArr; hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_module_init
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_ch_stop
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_off
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_update
</UL>

<P><STRONG><a name="[1d6]"></a>hal_pwrmgr_RAM_retention</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, pwrmgr.o(i.hal_pwrmgr_RAM_retention))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[199]"></a>hal_pwrmgr_RAM_retention_set</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, pwrmgr.o(i.hal_pwrmgr_RAM_retention_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = hal_pwrmgr_RAM_retention_set &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_sleep_process
</UL>

<P><STRONG><a name="[19a]"></a>hal_pwrmgr_init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, pwrmgr.o(i.hal_pwrmgr_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_pwrmgr_init
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableSleep (via Veneer)
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableSleep (via Veneer)
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f1]"></a>hal_pwrmgr_is_lock</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, pwrmgr.o(i.hal_pwrmgr_is_lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_pwrmgr_is_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_wakeup_handle
</UL>

<P><STRONG><a name="[181]"></a>hal_pwrmgr_lock</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, pwrmgr.o(i.hal_pwrmgr_lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableSleep (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_start
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_start
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reInitialLCD
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_wakeup_handle
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;txmit_buf_use_tx_buf
</UL>

<P><STRONG><a name="[129]"></a>hal_pwrmgr_register</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, pwrmgr.o(i.hal_pwrmgr_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_pwrmgr_register
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_Init
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_Init
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_init
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_init
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rfphy_init
</UL>

<P><STRONG><a name="[3d]"></a>hal_pwrmgr_sleep_process</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, pwrmgr.o(i.hal_pwrmgr_sleep_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = hal_pwrmgr_sleep_process &rArr; hal_pwrmgr_RAM_retention_set &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_RAM_retention_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[185]"></a>hal_pwrmgr_unlock</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, pwrmgr.o(i.hal_pwrmgr_unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableSleep (via Veneer)
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableSleep (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_ProcessEvent
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_stop
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_off
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_evt_hdl
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_int_handle
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_stop
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irq_tx_empty_handler
</UL>

<P><STRONG><a name="[3e]"></a>hal_pwrmgr_wakeup_process</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, pwrmgr.o(i.hal_pwrmgr_wakeup_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_pwrmgr_wakeup_process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[19e]"></a>hal_rom_code_ini</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, patch.o(i.hal_rom_code_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = hal_rom_code_ini &rArr; rf_calibrate1 &rArr; rc32k_calibration_check &rArr; rc32k_tracking_check &rArr; WaitRTCCount
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ini
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibrate1
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_init (via Veneer)
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_init (via Veneer)
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rfphy_init
</UL>

<P><STRONG><a name="[1a2]"></a>hal_rtc_clock_config</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, clock.o(i.hal_rtc_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = hal_rtc_clock_config &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a3]"></a>hal_spi_bus_deinit</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, spi.o(i.hal_spi_bus_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hal_spi_bus_deinit &rArr; hal_spi_pin_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_gate_disable
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_pin_deinit
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_off
</UL>

<P><STRONG><a name="[1a5]"></a>hal_spi_bus_init</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, spi.o(i.hal_spi_bus_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = hal_spi_bus_init &rArr; hal_spi_pin_init &rArr; hal_gpio_fmux_set
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_gate_enable
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_int_enable
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_int_disable
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_pin_init
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_master_init
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reInitialLCD
</UL>

<P><STRONG><a name="[21f]"></a>hal_spi_send_byte</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, spi.o(i.hal_spi_send_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_spi_send_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_cmd
</UL>

<P><STRONG><a name="[1aa]"></a>hal_system_init</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, common.o(i.hal_system_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = hal_system_init &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[182]"></a>hal_systick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, clock.o(i.hal_systick))
<BR><BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logoDisplay
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_stop
</UL>

<P><STRONG><a name="[1ab]"></a>hal_uart_init</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, uart.o(i.hal_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = hal_uart_init &rArr; uart_hw_config &rArr; hal_gpio_fmux_set
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_register
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_hw_config
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_Init
</UL>

<P><STRONG><a name="[9b]"></a>hal_uart_send_buff</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, uart.o(i.hal_uart_send_buff))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hal_uart_send_buff &rArr; txmit_buf_use_tx_buf &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;txmit_buf_use_tx_buf
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;txmit_buf_polling
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_keysChange_handle
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uartCB_Handle
</UL>

<P><STRONG><a name="[1f0]"></a>hal_uart_set_tx_buf</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, uart.o(i.hal_uart_set_tx_buf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_uart_set_tx_buf
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_Init
</UL>

<P><STRONG><a name="[14b]"></a>hsb2Rgb</STRONG> (Thumb, 674 bytes, Stack size 48 bytes, user_color.o(i.hsb2Rgb))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = hsb2Rgb &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleAfunc
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRGBLamp
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadTargetRGBValue
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_ctrl
</UL>

<P><STRONG><a name="[1af]"></a>init_config</STRONG> (Thumb, 442 bytes, Stack size 24 bytes, patch.o(i.init_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = init_config &rArr; check_chip_mAddr &rArr; read_chip_mAddr &rArr; chip_id_one_bit_hot_convter
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_chip_mAddr
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_chip_id
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12a]"></a>invalidMacAddrCheck</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, user_utils.o(i.invalidMacAddrCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = invalidMacAddrCheck &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSystemId
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sameByteCheck
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCD2ASC
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_Init
</UL>

<P><STRONG><a name="[1b5]"></a>keyBrightnessDecProcess</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, command_center.o(i.keyBrightnessDecProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = keyBrightnessDecProcess &rArr; CCS_DATATRANSFER_PROCESS &rArr; light_ctrl &rArr; startLightEffect &rArr; customizeGradualEffect &rArr; loadTargetPwmData &rArr; loadTargetRGBValue &rArr; hsb2Rgb &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_DATATRANSFER_PROCESS
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBrightnessDisplay
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setModeInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyFuncDownProcess
</UL>

<P><STRONG><a name="[1b7]"></a>keyBrightnessIncProcess</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, command_center.o(i.keyBrightnessIncProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = keyBrightnessIncProcess &rArr; CCS_DATATRANSFER_PROCESS &rArr; light_ctrl &rArr; startLightEffect &rArr; customizeGradualEffect &rArr; loadTargetPwmData &rArr; loadTargetRGBValue &rArr; hsb2Rgb &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_DATATRANSFER_PROCESS
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBrightnessDisplay
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setModeInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyFuncUpProcess
</UL>

<P><STRONG><a name="[9e]"></a>keyFuncDownProcess</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, command_center.o(i.keyFuncDownProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = keyFuncDownProcess &rArr; keyBrightnessDecProcess &rArr; CCS_DATATRANSFER_PROCESS &rArr; light_ctrl &rArr; startLightEffect &rArr; customizeGradualEffect &rArr; loadTargetPwmData &rArr; loadTargetRGBValue &rArr; hsb2Rgb &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_DATATRANSFER_PROCESS
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateStrobeDisplay
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSceneDisplay
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHuesDisplay
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTempDisplay
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;originalHsv2Rgb
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopSceneModeCheck
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restoreFromPreinstallModeCheck
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restoreFromCustomizeModeCheck
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyBrightnessDecProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_keysChange_handle
</UL>

<P><STRONG><a name="[9d]"></a>keyFuncUpProcess</STRONG> (Thumb, 244 bytes, Stack size 32 bytes, command_center.o(i.keyFuncUpProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = keyFuncUpProcess &rArr; keyBrightnessIncProcess &rArr; CCS_DATATRANSFER_PROCESS &rArr; light_ctrl &rArr; startLightEffect &rArr; customizeGradualEffect &rArr; loadTargetPwmData &rArr; loadTargetRGBValue &rArr; hsb2Rgb &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_DATATRANSFER_PROCESS
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateStrobeDisplay
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSceneDisplay
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHuesDisplay
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTempDisplay
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffAllLightEffect
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;originalHsv2Rgb
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopSceneModeCheck
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restoreFromPreinstallModeCheck
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restoreFromCustomizeModeCheck
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyBrightnessIncProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_keysChange_handle
</UL>

<P><STRONG><a name="[9c]"></a>keyFunctionProcess</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, command_center.o(i.keyFunctionProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = keyFunctionProcess &rArr; updateArrowDisplay &rArr; lcdDrawSingleCharGbk16 &rArr; lcdDrawFontGbk16 &rArr; lcdDrawPoint &rArr; lcd_set_xy &rArr; write_data &rArr; hal_spi_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateArrowDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_keysChange_handle
</UL>

<P><STRONG><a name="[11a]"></a>keys_Debounce_Handle</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, keys.o(i.keys_Debounce_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = keys_Debounce_Handle
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleSmartPeripheral_ProcessEvent
</UL>

<P><STRONG><a name="[1bc]"></a>keys_Init</STRONG> (Thumb, 162 bytes, Stack size 104 bytes, keys.o(i.keys_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = keys_Init &rArr; hal_gpioin_register &rArr; hal_gpioin_enable &rArr; hal_gpio_pin_init
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_register
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_wakeup_set
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[127]"></a>keys_RegisterCBs</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, keys.o(i.keys_RegisterCBs))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = keys_RegisterCBs
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_Init
</UL>

<P><STRONG><a name="[119]"></a>keys_RegisterDebounceCBs</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, keys.o(i.keys_RegisterDebounceCBs))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = keys_RegisterDebounceCBs
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleSmartPeripheral_Init
</UL>

<P><STRONG><a name="[91]"></a>keys_read</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, keys.o(i.keys_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = keys_read
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_keysChange_handle
</UL>

<P><STRONG><a name="[13f]"></a>lcdDrawFontGbk16</STRONG> (Thumb, 174 bytes, Stack size 56 bytes, display.o(i.lcdDrawFontGbk16))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lcdDrawFontGbk16 &rArr; lcdDrawPoint &rArr; lcd_set_xy &rArr; write_data &rArr; hal_spi_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdSetRegion
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawSingleCharGbk16
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateStrobeDisplay
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSceneDisplay
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHuesDisplay
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTempDisplay
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBrightnessDisplay
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateArrowDisplay
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
</UL>

<P><STRONG><a name="[114]"></a>lcdDrawLine</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, display.o(i.lcdDrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lcdDrawLine &rArr; lcdDrawPoint &rArr; lcd_set_xy &rArr; write_data &rArr; hal_spi_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_xy
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdRectColorDraw
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batterDisplay
</UL>

<P><STRONG><a name="[1be]"></a>lcdDrawPoint</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, display.o(i.lcdDrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lcdDrawPoint &rArr; lcd_set_xy &rArr; write_data &rArr; hal_spi_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_xy
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdRectColorDraw
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawWidthTimesHeight
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawLine
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawFontGbk16
</UL>

<P><STRONG><a name="[1c1]"></a>lcdDrawSingleCharGbk16</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, display.o(i.lcdDrawSingleCharGbk16))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lcdDrawSingleCharGbk16 &rArr; lcdDrawFontGbk16 &rArr; lcdDrawPoint &rArr; lcd_set_xy &rArr; write_data &rArr; hal_spi_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawFontGbk16
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHuesDisplay
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBrightnessDisplay
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateArrowDisplay
</UL>

<P><STRONG><a name="[140]"></a>lcdDrawWidthTimesHeight</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, display.o(i.lcdDrawWidthTimesHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lcdDrawWidthTimesHeight &rArr; lcdDrawPoint &rArr; lcd_set_xy &rArr; write_data &rArr; hal_spi_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdSetRegion
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logoDisplay
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBrightnessDisplay
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
</UL>

<P><STRONG><a name="[1c2]"></a>lcdEntrySleep</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, display.o(i.lcdEntrySleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lcdEntrySleep &rArr; write_cmd &rArr; hal_spi_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_off
</UL>

<P><STRONG><a name="[115]"></a>lcdRectColorDraw</STRONG> (Thumb, 218 bytes, Stack size 64 bytes, display.o(i.lcdRectColorDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = lcdRectColorDraw &rArr; lcdDrawLine &rArr; lcdDrawPoint &rArr; lcd_set_xy &rArr; write_data &rArr; hal_spi_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdSetRegion
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawPoint
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batterDisplay
</UL>

<P><STRONG><a name="[1bd]"></a>lcdSetRegion</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, display.o(i.lcdSetRegion))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lcdSetRegion &rArr; write_data &rArr; hal_spi_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logoDisplay
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdRectColorDraw
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawWidthTimesHeight
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawFontGbk16
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_clear
</UL>

<P><STRONG><a name="[88]"></a>lcd_clear</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, display.o(i.lcd_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = lcd_clear &rArr; lcdSetRegion &rArr; write_data &rArr; hal_spi_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdSetRegion
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateArrowDisplay
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_on
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_off
</UL>

<P><STRONG><a name="[85]"></a>lcd_off</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, display.o(i.lcd_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lcd_off &rArr; hal_spi_bus_deinit &rArr; hal_spi_pin_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_bus_deinit
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdEntrySleep
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_off
</UL>

<P><STRONG><a name="[146]"></a>lcd_on</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, display.o(i.lcd_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = lcd_on &rArr; reInitialLCD &rArr; hal_spi_bus_init &rArr; hal_spi_pin_init &rArr; hal_gpio_fmux_set
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitMs
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_config
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reInitialLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entryFactoryMode
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entryBurnInTest
</UL>

<P><STRONG><a name="[1bf]"></a>lcd_set_xy</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, display.o(i.lcd_set_xy))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lcd_set_xy &rArr; write_data &rArr; hal_spi_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawPoint
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawLine
</UL>

<P><STRONG><a name="[12d]"></a>lightEffectFunc</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, user_lighteffect.o(i.lightEffectFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = lightEffectFunc &rArr; setLEDFunc &rArr; turnOffColorTempLamp &rArr; setCoolData &rArr; setCoolDuty &rArr; updatePWMDuty &rArr; hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
</UL>

<P><STRONG><a name="[1c6]"></a>light_Init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, light.o(i.light_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = light_Init &rArr; light_off &rArr; hal_pwm_ch_stop &rArr; hal_pwm_destroy &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_off
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks
</UL>

<P><STRONG><a name="[2f]"></a>light_ProcessEvent</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, light.o(i.light_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = light_ProcessEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_receive (via Veneer)
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_deallocate (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal_blesmartperipheral.o(.constdata)
</UL>
<P><STRONG><a name="[6b]"></a>light_ctrl</STRONG> (Thumb, 312 bytes, Stack size 24 bytes, light.o(i.light_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = light_ctrl &rArr; startLightEffect &rArr; customizeGradualEffect &rArr; loadTargetPwmData &rArr; loadTargetRGBValue &rArr; hsb2Rgb &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTemp
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_off
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_update
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_EventsPro_TestMode
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_DATATRANSFER_PROCESS
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_off
</UL>

<P><STRONG><a name="[13d]"></a>light_off</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, light.o(i.light_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = light_off &rArr; hal_pwm_ch_stop &rArr; hal_pwm_destroy &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_stop
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_ch_stop
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_Init
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGrdualEndCbfunc
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_ctrl
</UL>

<P><STRONG><a name="[1c8]"></a>light_update</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, light.o(i.light_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = light_update &rArr; pwmInit &rArr; hal_pwm_ch_start &rArr; hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_stop
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_start
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmData
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRedData
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenData
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolData
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBlueData
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwmInit
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRGBLamp
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_ctrl
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uartCB_Handle
</UL>

<P><STRONG><a name="[22]"></a>lightning1Process</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, user_lighteffect.o(i.lightning1Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = lightning1Process &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coolUpdateByCoe
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolData
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_lighteffect.o(i.sceneLightning1)
</UL>
<P><STRONG><a name="[1c]"></a>llSetupAdv1</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, patch.o(i.llSetupAdv1))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = llSetupAdv1 &rArr; rf_phy_change_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event (via Veneer)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_change_cfg
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_rst_tfifo (via Veneer)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_rst_rfifo (via Veneer)
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_ign_rfifo (via Veneer)
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupUndirectedAdvEvt (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupScannableAdvEvt (via Veneer)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupNonConnectableAdvEvt (via Veneer)
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupDirectedAdvEvt (via Veneer)
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.init_config)
</UL>
<P><STRONG><a name="[19]"></a>ll_hw_go1</STRONG> (Thumb, 220 bytes, Stack size 16 bytes, patch.o(i.ll_hw_go1))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ll_hw_go1 &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_max_length (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_get_tr_mode (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.init_config)
</UL>
<P><STRONG><a name="[1d3]"></a>loadTargetColorTemperatureValue</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, light.o(i.loadTargetColorTemperatureValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = loadTargetColorTemperatureValue &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadTargetPwmData
</UL>

<P><STRONG><a name="[13b]"></a>loadTargetPwmData</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, user_lighteffect.o(i.loadTargetPwmData))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = loadTargetPwmData &rArr; loadTargetRGBValue &rArr; hsb2Rgb &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadTargetRGBValue
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadTargetColorTemperatureValue
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGradualEffect
</UL>

<P><STRONG><a name="[1d4]"></a>loadTargetRGBValue</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, light.o(i.loadTargetRGBValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = loadTargetRGBValue &rArr; hsb2Rgb &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadTargetPwmData
</UL>

<P><STRONG><a name="[13e]"></a>logoDisplay</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, display.o(i.logoDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = logoDisplay &rArr; lcdDrawWidthTimesHeight &rArr; lcdDrawPoint &rArr; lcd_set_xy &rArr; write_data &rArr; hal_spi_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_systick
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_ms_intv
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdSetRegion
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawWidthTimesHeight
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
</UL>

<P><STRONG><a name="[8]"></a>main</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = main &rArr; hal_rfphy_init &rArr; hal_rom_code_ini &rArr; rf_calibrate1 &rArr; rc32k_calibration_check &rArr; rc32k_tracking_check &rArr; WaitRTCCount
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_system_init
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_init
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_RAM_retention
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_clock_config
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keys_Init
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_init
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf_init
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_set_heap (via Veneer)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_config
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rfphy_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[1b0]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storeExceptionStts
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDeviceInfo
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readExceptionStts
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidMacAddrCheck
</UL>

<P><STRONG><a name="[1b9]"></a>originalHsv2Rgb</STRONG> (Thumb, 248 bytes, Stack size 56 bytes, user_color.o(i.originalHsv2Rgb))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = originalHsv2Rgb &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyFuncUpProcess
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyFuncDownProcess
</UL>

<P><STRONG><a name="[3c]"></a>osalInitTasks</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, osal_blesmartperipheral.o(i.osalInitTasks))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = osalInitTasks &rArr; command_center_Init &rArr; CCS_Systems_on &rArr; CCS_DATATRANSFER_PROCESS &rArr; light_ctrl &rArr; startLightEffect &rArr; customizeGradualEffect &rArr; loadTargetPwmData &rArr; loadTargetRGBValue &rArr; hsb2Rgb &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;userWatchDogInit
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systems_parameters_Init
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_Init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_mem_alloc (via Veneer)
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_Init
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_Init
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleSmartPeripheral_Init
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SM_Init (via Veneer)
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_Init (via Veneer)
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_Init (via Veneer)
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Init (via Veneer)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_Init (via Veneer)
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_Init
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_Init (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[a2]"></a>osal_snv_read</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, osal_snv.o(i.osal_snv_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osal_snv_read
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snv_calc_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systems_parameters_Init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ResolveAddr
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapBondMgrGetPublicAddr
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst
</UL>

<P><STRONG><a name="[1e2]"></a>osal_snv_write</STRONG> (Thumb, 126 bytes, Stack size 88 bytes, osal_snv.o(i.osal_snv_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = osal_snv_write &rArr; snvwr &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snvwr
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snv_calc_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateDeviceDefaultInfo
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systems_parameters_Init
</UL>

<P><STRONG><a name="[118]"></a>ota_app_AddService</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, ota_app_service.o(i.ota_app_AddService))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = ota_app_AddService &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_RegisterService
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_InitCharCfg
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_Register (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleSmartPeripheral_Init
</UL>

<P><STRONG><a name="[107]"></a>phy_printf</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, my_printf.o(i.phy_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = phy_printf &rArr; print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_send_buff
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_adc_init
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_adc_evt
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_app_AddService
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_adc_init
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidMacAddrCheck
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBattLevel
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_stop
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessOSALMsg
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_fault
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_WriteAttrCB
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_ReadAttrCB
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleConnStatusCB
</UL>

<P><STRONG><a name="[1d7]"></a>phy_printf_init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, my_printf.o(i.phy_printf_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = phy_printf_init &rArr; protocol_uart_Init &rArr; hal_uart_init &rArr; uart_hw_config &rArr; hal_gpio_fmux_set
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20a]"></a>processBattLevel</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, command_center.o(i.processBattLevel))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBattLevel
</UL>

<P><STRONG><a name="[1ee]"></a>protocol_uartCB_Handle</STRONG> (Thumb, 506 bytes, Stack size 40 bytes, command_center.o(i.protocol_uartCB_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = protocol_uartCB_Handle &rArr; factoryModeRGBOn &rArr; CCS_DATATRANSFER_PROCESS &rArr; light_ctrl &rArr; startLightEffect &rArr; customizeGradualEffect &rArr; loadTargetPwmData &rArr; loadTargetRGBValue &rArr; hsb2Rgb &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_get_voltage
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSystemId
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHotDisplay
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_get_value
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_update
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_send_buff
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryModeRGBOn
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryModeColorTempOn
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entryFactoryMode
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_off
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_evt_hdl
</UL>

<P><STRONG><a name="[1ef]"></a>protocol_uart_GetBandrate</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, protocol_uart.o(i.protocol_uart_GetBandrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = protocol_uart_GetBandrate &rArr; systems_param_Get_param
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systems_param_Get_param
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_Init
</UL>

<P><STRONG><a name="[1df]"></a>protocol_uart_Init</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, protocol_uart.o(i.protocol_uart_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = protocol_uart_Init &rArr; hal_uart_init &rArr; uart_hw_config &rArr; hal_gpio_fmux_set
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_register
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_set_tx_buf
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_register
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_wakeup_set
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_GetBandrate
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf_init
</UL>

<P><STRONG><a name="[2e]"></a>protocol_uart_ProcessEvent</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, protocol_uart.o(i.protocol_uart_ProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = protocol_uart_ProcessEvent &rArr; hal_gpioin_register &rArr; hal_gpioin_enable &rArr; hal_gpio_pin_init
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_receive (via Veneer)
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_msg_deallocate (via Veneer)
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_register
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_wakeup_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal_blesmartperipheral.o(.constdata)
</UL>
<P><STRONG><a name="[6f]"></a>pwmInit</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, light.o(i.pwmInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = pwmInit &rArr; hal_pwm_ch_start &rArr; hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_module_init
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_ch_start
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_EventsPro_TestMode
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_update
</UL>

<P><STRONG><a name="[1f2]"></a>rc32k_calibration</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, patch.o(i.rc32k_calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rc32k_calibration &rArr; WaitRTCCount
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitRTCCount
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_calibration_check
</UL>

<P><STRONG><a name="[1f3]"></a>rc32k_calibration_check</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, patch.o(i.rc32k_calibration_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = rc32k_calibration_check &rArr; rc32k_tracking_check &rArr; WaitRTCCount
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_tracking_check
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_calibration
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibrate1
</UL>

<P><STRONG><a name="[1f4]"></a>rc32k_tracking_check</STRONG> (Thumb, 104 bytes, Stack size 88 bytes, patch.o(i.rc32k_tracking_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = rc32k_tracking_check &rArr; WaitRTCCount
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitRTCCount
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arry_sort
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_calibration_check
</UL>

<P><STRONG><a name="[8c]"></a>reInitialLCD</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, display.o(i.reInitialLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = reInitialLCD &rArr; hal_spi_bus_init &rArr; hal_spi_pin_init &rArr; hal_gpio_fmux_set
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_bus_init
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_lock
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_DS_control
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_config
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_on
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_on
</UL>

<P><STRONG><a name="[1f7]"></a>readDeviceInfo</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, user_flash.o(i.readDeviceInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = readDeviceInfo &rArr; readFlashData &rArr; flash_read_ucds_block_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readFlashData
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateDeviceInfo2Flash
</UL>

<P><STRONG><a name="[12b]"></a>readExceptionStts</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, user_flash.o(i.readExceptionStts))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = readExceptionStts &rArr; readFlashData &rArr; flash_read_ucds_block_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSystemStts
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_ucds
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readFlashData
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_Init
</UL>

<P><STRONG><a name="[1f8]"></a>readFlashData</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, user_flash.o(i.readFlashData))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = readFlashData &rArr; flash_read_ucds_block_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_ucds_block_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDeviceInfo
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readExceptionStts
</UL>

<P><STRONG><a name="[11c]"></a>read_chip_id</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, flash_ext.o(i.read_chip_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = read_chip_id &rArr; chip_id_one_bit_hot_convter
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chip_id_one_bit_hot_convter
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_chip_id
</UL>

<P><STRONG><a name="[11e]"></a>read_chip_mAddr</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, flash_ext.o(i.read_chip_mAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = read_chip_mAddr &rArr; chip_id_one_bit_hot_convter
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chip_id_one_bit_hot_convter
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_chip_mAddr
</UL>

<P><STRONG><a name="[1fb]"></a>resetDeviceInfoParams</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, systems_parameters.o(i.resetDeviceInfoParams))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = resetDeviceInfoParams &rArr; storeDeviceInfo &rArr; writeFlashData &rArr; flash_write_ucds_block_byte &rArr; flash_write_ucds &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storeDeviceInfo
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateDeviceInfo2Flash
</UL>

<P><STRONG><a name="[86]"></a>restartBattInfoCollection</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, command_center.o(i.restartBattInfoCollection))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startCharging
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_on
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_off
</UL>

<P><STRONG><a name="[1b8]"></a>restoreFromCustomizeModeCheck</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, command_center.o(i.restoreFromCustomizeModeCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = restoreFromCustomizeModeCheck &rArr; restoreMode &rArr; turnOffAllLightEffect &rArr; turnOffColorTempLamp &rArr; setCoolData &rArr; setCoolDuty &rArr; updatePWMDuty &rArr; hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restoreMode
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyFuncUpProcess
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyFuncDownProcess
</UL>

<P><STRONG><a name="[1bb]"></a>restoreFromPreinstallModeCheck</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, command_center.o(i.restoreFromPreinstallModeCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = restoreFromPreinstallModeCheck &rArr; restoreMode &rArr; turnOffAllLightEffect &rArr; turnOffColorTempLamp &rArr; setCoolData &rArr; setCoolDuty &rArr; updatePWMDuty &rArr; hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restoreMode
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyFuncUpProcess
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyFuncDownProcess
</UL>

<P><STRONG><a name="[1fd]"></a>restoreMode</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, command_center.o(i.restoreMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = restoreMode &rArr; turnOffAllLightEffect &rArr; turnOffColorTempLamp &rArr; setCoolData &rArr; setCoolDuty &rArr; updatePWMDuty &rArr; hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffAllLightEffect
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setModeInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restoreFromPreinstallModeCheck
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restoreFromCustomizeModeCheck
</UL>

<P><STRONG><a name="[1a]"></a>rf_calibrate1</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, patch.o(i.rf_calibrate1))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = rf_calibrate1 &rArr; rc32k_calibration_check &rArr; rc32k_tracking_check &rArr; WaitRTCCount
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tpCal_gen_cap_arrary
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_rxDcoc_cfg
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ana_cfg
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc32k_calibration_check
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rom_code_ini
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(i.init_config)
</UL>
<P><STRONG><a name="[1fe]"></a>rf_phy_ana_cfg</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, rf_phy_driver.o(i.rf_phy_ana_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = rf_phy_ana_cfg &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ini
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibrate1
</UL>

<P><STRONG><a name="[201]"></a>rf_phy_bb_cfg</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, rf_phy_driver.o(i.rf_phy_bb_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = rf_phy_bb_cfg &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ini
</UL>

<P><STRONG><a name="[1c9]"></a>rf_phy_change_cfg</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, rf_phy_driver.o(i.rf_phy_change_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = rf_phy_change_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llSetupAdv1
</UL>

<P><STRONG><a name="[3f]"></a>rf_phy_ini</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, rf_phy_driver.o(i.rf_phy_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = rf_phy_ini &rArr; rf_phy_ana_cfg &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ana_cfg
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_set_txPower
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_bb_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rom_code_ini
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[202]"></a>rf_phy_set_txPower</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rf_phy_driver.o(i.rf_phy_set_txPower))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = rf_phy_set_txPower &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ini
</UL>

<P><STRONG><a name="[200]"></a>rf_rxDcoc_cfg</STRONG> (Thumb, 220 bytes, Stack size 20 bytes, rf_phy_driver.o(i.rf_rxDcoc_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rf_rxDcoc_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibrate1
</UL>

<P><STRONG><a name="[1ff]"></a>rf_tpCal_gen_cap_arrary</STRONG> (Thumb, 60 bytes, Stack size 4 bytes, rf_phy_driver.o(i.rf_tpCal_gen_cap_arrary))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rf_tpCal_gen_cap_arrary &rArr; rf_tp_cal
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tp_cal
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibrate1
</UL>

<P><STRONG><a name="[203]"></a>rf_tp_cal</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, rf_phy_driver.o(i.rf_tp_cal))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = rf_tp_cal
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tpCal_gen_cap_arrary
</UL>

<P><STRONG><a name="[1b2]"></a>sameByteCheck</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, user_utils.o(i.sameByteCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sameByteCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidMacAddrCheck
</UL>

<P><STRONG><a name="[204]"></a>sceneFire</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, user_lighteffect.o(i.sceneFire))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sceneFire
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGradualEffectPub
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
</UL>

<P><STRONG><a name="[206]"></a>sceneLightning1</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, user_lighteffect.o(i.sceneLightning1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sceneLightning1
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGradualEffectPub
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
</UL>

<P><STRONG><a name="[207]"></a>set2FlashMode2StyleA</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, user_lighteffect.o(i.set2FlashMode2StyleA))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set2FlashMode2StyleA
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGradualEffectPub
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
</UL>

<P><STRONG><a name="[208]"></a>set2SimulatonModeStyleA</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, user_lighteffect.o(i.set2SimulatonModeStyleA))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = set2SimulatonModeStyleA &rArr; setFlashEffectPub &rArr; setLEDFunc &rArr; turnOffColorTempLamp &rArr; setCoolData &rArr; setCoolDuty &rArr; updatePWMDuty &rArr; hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setFlashEffectPub
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
</UL>

<P><STRONG><a name="[12e]"></a>setBattLevel</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, command_center.o(i.setBattLevel))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = setBattLevel &rArr; battVoltCompensation &rArr; getChargingCurrentByVolt &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBattPercentByVolt
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getLightStts
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processBattLevel
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battVoltCompensation
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
</UL>

<P><STRONG><a name="[92]"></a>setBatteryFully</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, command_center.o(i.setBatteryFully))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = setBatteryFully
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_keysChange_handle
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
</UL>

<P><STRONG><a name="[73]"></a>setBlueData</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, user_color.o(i.setBlueData))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = setBlueData &rArr; setBlueDuty &rArr; updatePWMDuty &rArr; hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBlueDuty
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_EventsPro_TestMode
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGrdualEndCbfunc
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGrdualCbfunc
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_update
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRgbOnly
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColor
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffRGBLamp
</UL>

<P><STRONG><a name="[20b]"></a>setBlueDuty</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, user_color.o(i.setBlueDuty))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = setBlueDuty &rArr; updatePWMDuty &rArr; hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatePWMDuty
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBlueData
</UL>

<P><STRONG><a name="[74]"></a>setCoolData</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, user_color.o(i.setCoolData))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = setCoolData &rArr; setCoolDuty &rArr; updatePWMDuty &rArr; hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolDuty
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_EventsPro_TestMode
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffColorTempLamp
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightning1Process
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGrdualEndCbfunc
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGrdualCbfunc
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coolUpdateByCoe
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTemp
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_update
</UL>

<P><STRONG><a name="[20d]"></a>setCoolDuty</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, user_color.o(i.setCoolDuty))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = setCoolDuty &rArr; updatePWMDuty &rArr; hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatePWMDuty
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolData
</UL>

<P><STRONG><a name="[209]"></a>setFlashEffectPub</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, user_lighteffect.o(i.setFlashEffectPub))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = setFlashEffectPub &rArr; setLEDFunc &rArr; turnOffColorTempLamp &rArr; setCoolData &rArr; setCoolDuty &rArr; updatePWMDuty &rArr; hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2SimulatonModeStyleA
</UL>

<P><STRONG><a name="[205]"></a>setGradualEffectPub</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, user_lighteffect.o(i.setGradualEffectPub))
<BR><BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2FlashMode2StyleA
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sceneLightning1
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sceneFire
</UL>

<P><STRONG><a name="[72]"></a>setGreenData</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, user_color.o(i.setGreenData))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = setGreenData &rArr; setGreenDuty &rArr; updatePWMDuty &rArr; hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenDuty
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_EventsPro_TestMode
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGrdualEndCbfunc
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGrdualCbfunc
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_update
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRgbOnly
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColor
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffRGBLamp
</UL>

<P><STRONG><a name="[20e]"></a>setGreenDuty</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, user_color.o(i.setGreenDuty))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = setGreenDuty &rArr; updatePWMDuty &rArr; hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatePWMDuty
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenData
</UL>

<P><STRONG><a name="[1c5]"></a>setLEDFunc</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, user_lighteffect.o(i.setLEDFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = setLEDFunc &rArr; turnOffColorTempLamp &rArr; setCoolData &rArr; setCoolDuty &rArr; updatePWMDuty &rArr; hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffColorTempLamp
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmData
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRedData
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenData
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolData
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBlueData
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffRGBLamp
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setFlashEffectPub
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightEffectFunc
</UL>

<P><STRONG><a name="[1b6]"></a>setModeInfo</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, command_center.o(i.setModeInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = setModeInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restoreMode
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyBrightnessIncProcess
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyBrightnessDecProcess
</UL>

<P><STRONG><a name="[70]"></a>setRedData</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, user_color.o(i.setRedData))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = setRedData &rArr; setRedDuty &rArr; updatePWMDuty &rArr; hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRedDuty
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_EventsPro_TestMode
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGrdualEndCbfunc
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGrdualCbfunc
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_update
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRgbOnly
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColor
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffRGBLamp
</UL>

<P><STRONG><a name="[20f]"></a>setRedDuty</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, user_color.o(i.setRedDuty))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = setRedDuty &rArr; updatePWMDuty &rArr; hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatePWMDuty
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRedData
</UL>

<P><STRONG><a name="[7f]"></a>setTemperature</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, temp.o(i.setTemperature))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_off
</UL>

<P><STRONG><a name="[75]"></a>setWarmData</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, user_color.o(i.setWarmData))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = setWarmData &rArr; updatePWMDuty &rArr; hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatePWMDuty
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_EventsPro_TestMode
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffColorTempLamp
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fireProcess
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGrdualEndCbfunc
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGrdualCbfunc
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTemp
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_update
</UL>

<P><STRONG><a name="[1e6]"></a>simpleProfile_Set_notify_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, simplegattprofile.o(i.simpleProfile_Set_notify_status))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheralStateNotificationCB
</UL>

<P><STRONG><a name="[1a8]"></a>spi_int_enable</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, spi.o(i.spi_int_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = spi_int_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_bus_init
</UL>

<P><STRONG><a name="[93]"></a>startCharging</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, command_center.o(i.startCharging))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = startCharging
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restartBattInfoCollection
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_keysChange_handle
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
</UL>

<P><STRONG><a name="[1c7]"></a>startLightEffect</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, user_lighteffect.o(i.startLightEffect))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = startLightEffect &rArr; customizeGradualEffect &rArr; loadTargetPwmData &rArr; loadTargetRGBValue &rArr; hsb2Rgb &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2SimulatonModeStyleA
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set2FlashMode2StyleA
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sceneLightning1
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sceneFire
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGradualEffect
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeFlashEffect
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffAllLightEffect
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffectEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_ctrl
</UL>

<P><STRONG><a name="[213]"></a>startLightEffectEvent</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, command_center.o(i.startLightEffectEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = startLightEffectEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_reload_timer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
</UL>

<P><STRONG><a name="[95]"></a>stopCharging</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, command_center.o(i.stopCharging))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_keysChange_handle
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
</UL>

<P><STRONG><a name="[13c]"></a>stopLightEffectEvent</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, command_center.o(i.stopLightEffectEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = stopLightEffectEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeGrdualEndCbfunc
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffAllLightEffect
</UL>

<P><STRONG><a name="[1ba]"></a>stopSceneModeCheck</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, command_center.o(i.stopSceneModeCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = stopSceneModeCheck &rArr; updateStrobeDisplay &rArr; lcdDrawFontGbk16 &rArr; lcdDrawPoint &rArr; lcd_set_xy &rArr; write_data &rArr; hal_spi_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateStrobeDisplay
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSceneDisplay
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffAllLightEffect
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyFuncUpProcess
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyFuncDownProcess
</UL>

<P><STRONG><a name="[1fc]"></a>storeDeviceInfo</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, user_flash.o(i.storeDeviceInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = storeDeviceInfo &rArr; writeFlashData &rArr; flash_write_ucds_block_byte &rArr; flash_write_ucds &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeFlashData
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetDeviceInfoParams
</UL>

<P><STRONG><a name="[e7]"></a>storeExceptionStts</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, user_flash.o(i.storeExceptionStts))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = storeExceptionStts &rArr; writeFlashData &rArr; flash_write_ucds_block_byte &rArr; flash_write_ucds &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSystemStts
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeFlashData
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_RESET_MCU
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateDeviceDefaultInfo
</UL>

<P><STRONG><a name="[17f]"></a>subWriteReg</STRONG> (Thumb, 36 bytes, Stack size 20 bytes, common.o(i.subWriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = subWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_config_channel
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_system_init
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_RAM_retention_set
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rtc_clock_config
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_set_count_val
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_open_channel
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_init
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_destroy
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_close_channel
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rfphy_init
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_ana_cfg
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_hw_go1
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_set_txPower
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_phy_bb_cfg
</UL>

<P><STRONG><a name="[c6]"></a>systems_param_Get_param</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, systems_parameters.o(i.systems_param_Get_param))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = systems_param_Get_param
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetadvInt
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetConnetInt
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheralStateNotificationCB
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleSmartPeripheral_Init
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;versionDisplay
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uart_GetBandrate
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;devInfo_ReadAttrCB
</UL>

<P><STRONG><a name="[1e5]"></a>systems_param_Set_param</STRONG> (Thumb, 206 bytes, Stack size 8 bytes, systems_parameters.o(i.systems_param_Set_param))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = systems_param_Set_param
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheralStateNotificationCB
</UL>

<P><STRONG><a name="[1de]"></a>systems_parameters_Init</STRONG> (Thumb, 690 bytes, Stack size 24 bytes, systems_parameters.o(i.systems_parameters_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = systems_parameters_Init &rArr; osal_snv_write &rArr; snvwr &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_write
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_read
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ReadBDADDR (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks
</UL>

<P><STRONG><a name="[126]"></a>temp_RegisterCBs_Value</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, temp.o(i.temp_RegisterCBs_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = temp_RegisterCBs_Value
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_Init
</UL>

<P><STRONG><a name="[98]"></a>temp_get_value</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, temp.o(i.temp_get_value))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_keysChange_handle
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uartCB_Handle
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleProfile_ReadAttrCB
</UL>

<P><STRONG><a name="[8b]"></a>temp_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, temp.o(i.temp_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = temp_init &rArr; hal_gpio_write &rArr; hal_gpio_pin_init
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_Init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_on
</UL>

<P><STRONG><a name="[131]"></a>temp_measure</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, temp.o(i.temp_measure))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = temp_measure &rArr; temp_adc_init &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_adc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
</UL>

<P><STRONG><a name="[84]"></a>turnOffAllLightEffect</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, user_lighteffect.o(i.turnOffAllLightEffect))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = turnOffAllLightEffect &rArr; turnOffColorTempLamp &rArr; setCoolData &rArr; setCoolDuty &rArr; updatePWMDuty &rArr; hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffColorTempLamp
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopLightEffectEvent
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffRGBLamp
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLightEffect
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopSceneModeCheck
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restoreMode
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyFuncUpProcess
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_off
</UL>

<P><STRONG><a name="[138]"></a>turnOffColorTempLamp</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, user_color.o(i.turnOffColorTempLamp))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = turnOffColorTempLamp &rArr; setCoolData &rArr; setCoolDuty &rArr; updatePWMDuty &rArr; hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmData
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolData
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeFlashCbfunc
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffAllLightEffect
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColor
</UL>

<P><STRONG><a name="[137]"></a>turnOffRGBLamp</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, user_color.o(i.turnOffRGBLamp))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = turnOffRGBLamp &rArr; setRedData &rArr; setRedDuty &rArr; updatePWMDuty &rArr; hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRedData
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenData
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBlueData
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLEDFunc
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeFlashCbfunc
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffAllLightEffect
</UL>

<P><STRONG><a name="[8e]"></a>updateArrowDisplay</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, display.o(i.updateArrowDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = updateArrowDisplay &rArr; lcdDrawSingleCharGbk16 &rArr; lcdDrawFontGbk16 &rArr; lcdDrawPoint &rArr; lcd_set_xy &rArr; write_data &rArr; hal_spi_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawSingleCharGbk16
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawFontGbk16
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyFunctionProcess
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entryFactoryMode
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_on
</UL>

<P><STRONG><a name="[130]"></a>updateBLEDisplay</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, display.o(i.updateBLEDisplay))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
</UL>

<P><STRONG><a name="[145]"></a>updateBrightnessDisplay</STRONG> (Thumb, 232 bytes, Stack size 32 bytes, display.o(i.updateBrightnessDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = updateBrightnessDisplay &rArr; updateHuesDisplay &rArr; lcdDrawSingleCharGbk16 &rArr; lcdDrawFontGbk16 &rArr; lcdDrawPoint &rArr; lcd_set_xy &rArr; write_data &rArr; hal_spi_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawWidthTimesHeight
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawSingleCharGbk16
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawFontGbk16
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateStrobeDisplay
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSceneDisplay
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHuesDisplay
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateColorTempDisplay
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyBrightnessIncProcess
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyBrightnessDecProcess
</UL>

<P><STRONG><a name="[149]"></a>updateColor</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, user_color.o(i.updateColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = updateColor &rArr; turnOffColorTempLamp &rArr; setCoolData &rArr; setCoolDuty &rArr; updatePWMDuty &rArr; hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOffColorTempLamp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRedData
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenData
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBlueData
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashMode2StyleAfunc
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fireProcess
</UL>

<P><STRONG><a name="[135]"></a>updateColorTemp</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, light.o(i.updateColorTemp))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = updateColorTemp &rArr; setCoolData &rArr; setCoolDuty &rArr; updatePWMDuty &rArr; hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmData
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolData
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeFlashCbfunc
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_ctrl
</UL>

<P><STRONG><a name="[141]"></a>updateColorTempDisplay</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, display.o(i.updateColorTempDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = updateColorTempDisplay &rArr; lcdDrawFontGbk16 &rArr; lcdDrawPoint &rArr; lcd_set_xy &rArr; write_data &rArr; hal_spi_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawFontGbk16
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBrightnessDisplay
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyFuncUpProcess
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyFuncDownProcess
</UL>

<P><STRONG><a name="[210]"></a>updateDeviceDefaultInfo</STRONG> (Thumb, 476 bytes, Stack size 24 bytes, systems_parameters.o(i.updateDeviceDefaultInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = updateDeviceDefaultInfo &rArr; UserInfo_NotifyStatus &rArr; SimpleProfile_SetParameter &rArr; GATTServApp_ProcessCharCfg &rArr; GATTServApp_ReadAttr &rArr; gattServApp_FindAuthorizeAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storeExceptionStts
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_write
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserInfo_NotifyStatus
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleProfileChangeCB
</UL>

<P><STRONG><a name="[8f]"></a>updateDeviceInfo2Flash</STRONG> (Thumb, 232 bytes, Stack size 8 bytes, systems_parameters.o(i.updateDeviceInfo2Flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = updateDeviceInfo2Flash &rArr; resetDeviceInfoParams &rArr; storeDeviceInfo &rArr; writeFlashData &rArr; flash_write_ucds_block_byte &rArr; flash_write_ucds &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDeviceInfo
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetDeviceInfoParams
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_on
</UL>

<P><STRONG><a name="[132]"></a>updateHotDisplay</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, display.o(i.updateHotDisplay))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uartCB_Handle
</UL>

<P><STRONG><a name="[142]"></a>updateHuesDisplay</STRONG> (Thumb, 284 bytes, Stack size 32 bytes, display.o(i.updateHuesDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = updateHuesDisplay &rArr; lcdDrawSingleCharGbk16 &rArr; lcdDrawFontGbk16 &rArr; lcdDrawPoint &rArr; lcd_set_xy &rArr; write_data &rArr; hal_spi_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawSingleCharGbk16
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawFontGbk16
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBrightnessDisplay
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyFuncUpProcess
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyFuncDownProcess
</UL>

<P><STRONG><a name="[20c]"></a>updatePWMDuty</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, user_color.o(i.updatePWMDuty))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = updatePWMDuty &rArr; hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwm_set_count_val
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmData
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRedDuty
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenDuty
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolDuty
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBlueDuty
</UL>

<P><STRONG><a name="[134]"></a>updateRGBLamp</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, light.o(i.updateRGBLamp))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = updateRGBLamp &rArr; hsb2Rgb &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hsb2Rgb
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_update
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;customizeFlashCbfunc
</UL>

<P><STRONG><a name="[148]"></a>updateRgbOnly</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, user_color.o(i.updateRgbOnly))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = updateRgbOnly &rArr; setRedData &rArr; setRedDuty &rArr; updatePWMDuty &rArr; hal_pwm_set_count_val &rArr; subWriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRedData
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenData
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBlueData
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fireProcess
</UL>

<P><STRONG><a name="[143]"></a>updateSceneDisplay</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, display.o(i.updateSceneDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = updateSceneDisplay &rArr; lcdDrawFontGbk16 &rArr; lcdDrawPoint &rArr; lcd_set_xy &rArr; write_data &rArr; hal_spi_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawFontGbk16
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBrightnessDisplay
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopSceneModeCheck
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyFuncUpProcess
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyFuncDownProcess
</UL>

<P><STRONG><a name="[144]"></a>updateStrobeDisplay</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, display.o(i.updateStrobeDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = updateStrobeDisplay &rArr; lcdDrawFontGbk16 &rArr; lcdDrawPoint &rArr; lcd_set_xy &rArr; write_data &rArr; hal_spi_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawFontGbk16
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBrightnessDisplay
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySystemMenu
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopSceneModeCheck
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyFuncUpProcess
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyFuncDownProcess
</UL>

<P><STRONG><a name="[1f9]"></a>updateSystemStts</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, command_center.o(i.updateSystemStts))
<BR><BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readExceptionStts
</UL>

<P><STRONG><a name="[186]"></a>usbAbsSubUint16</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, adc.o(i.usbAbsSubUint16))
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal
</UL>

<P><STRONG><a name="[1e0]"></a>userWatchDogInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_watchdog.o(i.userWatchDogInit))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osalInitTasks
</UL>

<P><STRONG><a name="[31]"></a>userWatchDogProcessEvent</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, user_watchdog.o(i.userWatchDogProcessEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = userWatchDogProcessEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watchdog_ProcessEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal_blesmartperipheral.o(.constdata)
</UL>
<P><STRONG><a name="[147]"></a>versionDisplay</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, command_center.o(i.versionDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = versionDisplay &rArr; systems_param_Get_param
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systems_param_Get_param
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowNum
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entryFactoryMode
</UL>

<P><STRONG><a name="[214]"></a>writeFlashData</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, user_flash.o(i.writeFlashData))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = writeFlashData &rArr; flash_write_ucds_block_byte &rArr; flash_write_ucds &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_ucds_block_byte
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_ucds
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storeExceptionStts
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storeDeviceInfo
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1]"></a>peripheralStateNotificationCB</STRONG> (Thumb, 164 bytes, Stack size 72 bytes, blesmartperipheral.o(i.peripheralStateNotificationCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = peripheralStateNotificationCB &rArr; GAPRole_SetParameter &rArr; gapRole_startConnUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systems_param_Set_param
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systems_param_Get_param
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simpleProfile_Set_notify_status
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_GetParameter
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> blesmartperipheral.o(.data)
</UL>
<P><STRONG><a name="[0]"></a>simpleProfileChangeCB</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, blesmartperipheral.o(i.simpleProfileChangeCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = simpleProfileChangeCB &rArr; updateDeviceDefaultInfo &rArr; UserInfo_NotifyStatus &rArr; SimpleProfile_SetParameter &rArr; GATTServApp_ProcessCharCfg &rArr; GATTServApp_ReadAttr &rArr; gattServApp_FindAuthorizeAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateDeviceDefaultInfo
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleProfile_GetParameter
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_SIMPLEGATT_DATA_PROCESS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> blesmartperipheral.o(.data)
</UL>
<P><STRONG><a name="[f3]"></a>UserInfo_NotifyStatus</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, systems_parameters.o(i.UserInfo_NotifyStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = UserInfo_NotifyStatus &rArr; SimpleProfile_SetParameter &rArr; GATTServApp_ProcessCharCfg &rArr; GATTServApp_ReadAttr &rArr; gattServApp_FindAuthorizeAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleProfile_SetParameter
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateDeviceDefaultInfo
</UL>

<P><STRONG><a name="[21b]"></a>__NVIC_SystemReset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, systems_parameters.o(i.__NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateDeviceDefaultInfo
</UL>

<P><STRONG><a name="[f]"></a>batt_adc_evt</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, battery.o(i.batt_adc_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = batt_adc_evt &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_cal
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> battery.o(i.batt_adc_init)
</UL>
<P><STRONG><a name="[10b]"></a>batt_adc_init</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, battery.o(i.batt_adc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = batt_adc_init &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_start
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_config_channel
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAdcStts
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_RESET_MCU
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_measure
</UL>

<P><STRONG><a name="[10a]"></a>batt_cal</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, battery.o(i.batt_cal))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = batt_cal &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_adc_evt
</UL>

<P><STRONG><a name="[68]"></a>CCS_DATATRANSFER_PROCESS</STRONG> (Thumb, 212 bytes, Stack size 40 bytes, command_center.o(i.CCS_DATATRANSFER_PROCESS))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = CCS_DATATRANSFER_PROCESS &rArr; light_ctrl &rArr; startLightEffect &rArr; customizeGradualEffect &rArr; loadTargetPwmData &rArr; loadTargetRGBValue &rArr; hsb2Rgb &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_ctrl
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyFuncUpProcess
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyFuncDownProcess
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyBrightnessIncProcess
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyBrightnessDecProcess
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryModeRGBOn
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryModeColorTempOn
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_on
</UL>

<P><STRONG><a name="[6c]"></a>CCS_EventsPro_TestMode</STRONG> (Thumb, 614 bytes, Stack size 32 bytes, command_center.o(i.CCS_EventsPro_TestMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = CCS_EventsPro_TestMode &rArr; factoryModeRGBOn &rArr; CCS_DATATRANSFER_PROCESS &rArr; light_ctrl &rArr; startLightEffect &rArr; customizeGradualEffect &rArr; loadTargetPwmData &rArr; loadTargetRGBValue &rArr; hsb2Rgb &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_RESET_MCU
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmData
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setRedData
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGreenData
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCoolData
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBlueData
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwmInit
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_ctrl
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayFloat
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryModeRGBOn
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryModeColorTempOn
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entryFactoryMode
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entryBurnInTest
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_keysChange_handle
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
</UL>

<P><STRONG><a name="[7c]"></a>CCS_NotifyStatus</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, command_center.o(i.CCS_NotifyStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = CCS_NotifyStatus &rArr; SimpleProfile_SetParameter &rArr; GATTServApp_ProcessCharCfg &rArr; GATTServApp_ReadAttr &rArr; gattServApp_FindAuthorizeAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimpleProfile_SetParameter
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
</UL>

<P><STRONG><a name="[90]"></a>CCS_keysChange_handle</STRONG> (Thumb, 686 bytes, Stack size 32 bytes, command_center.o(i.CCS_keysChange_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = CCS_keysChange_handle &rArr; keyFuncUpProcess &rArr; keyBrightnessIncProcess &rArr; CCS_DATATRANSFER_PROCESS &rArr; light_ctrl &rArr; startLightEffect &rArr; customizeGradualEffect &rArr; loadTargetPwmData &rArr; loadTargetRGBValue &rArr; hsb2Rgb &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_EventsPro_TestMode
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_RESET_MCU
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_get_voltage
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_get_value
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_get_timeoutEx (via Veneer)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keys_read
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_send_buff
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayFloat
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayFactoryInfo
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowNum
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopCharging
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startCharging
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBatteryFully
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyFunctionProcess
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyFuncUpProcess
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyFuncDownProcess
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_on
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCS_Systems_off
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_center_ProcessEvent
</UL>

<P><STRONG><a name="[1c4]"></a>lcd_config</STRONG> (Thumb, 760 bytes, Stack size 8 bytes, display.o(i.lcd_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lcd_config &rArr; WaitMs &rArr; WaitRTCCount
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitMs
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_cmd
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pin_init
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reInitialLCD
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_on
</UL>

<P><STRONG><a name="[1c3]"></a>write_cmd</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, display.o(i.write_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = write_cmd &rArr; hal_spi_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_send_byte
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fast_write
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_xy
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdSetRegion
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdEntrySleep
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_config
</UL>

<P><STRONG><a name="[1c0]"></a>write_data</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, display.o(i.write_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = write_data &rArr; hal_spi_send_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_send_byte
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fast_write
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logoDisplay
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_xy
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdSetRegion
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdDrawPoint
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_config
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_clear
</UL>

<P><STRONG><a name="[24]"></a>temp_adc_evt</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, temp.o(i.temp_adc_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = temp_adc_evt &rArr; hal_adc_value_cal &rArr; __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_value_cal
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event (via Veneer)
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_cal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> temp.o(i.temp_adc_init)
</UL>
<P><STRONG><a name="[218]"></a>temp_adc_init</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, temp.o(i.temp_adc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = temp_adc_init &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_start
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_config_channel
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAdcStts
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_RESET_MCU
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_measure
</UL>

<P><STRONG><a name="[217]"></a>temp_cal</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, temp.o(i.temp_cal))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = temp_cal &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_adc_evt
</UL>

<P><STRONG><a name="[32]"></a>protocol_uart_evt_hdl</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, protocol_uart.o(i.protocol_uart_evt_hdl))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = protocol_uart_evt_hdl &rArr; protocol_uartCB_Handle &rArr; factoryModeRGBOn &rArr; CCS_DATATRANSFER_PROCESS &rArr; light_ctrl &rArr; startLightEffect &rArr; customizeGradualEffect &rArr; loadTargetPwmData &rArr; loadTargetRGBValue &rArr; hsb2Rgb &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_uartCB_Handle
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> protocol_uart.o(.constdata)
</UL>
<P><STRONG><a name="[20]"></a>protocol_uart_wakeup_handle</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, protocol_uart.o(i.protocol_uart_wakeup_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = protocol_uart_wakeup_handle &rArr; hal_gpioin_disable &rArr; hal_gpio_pin_init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_lock
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_is_lock
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_disable
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux_set
</UL>
<BR>[Address Reference Count : 2]<UL><LI> protocol_uart.o(i.protocol_uart_Init)
<LI> protocol_uart.o(i.protocol_uart_ProcessEvent)
</UL>
<P><STRONG><a name="[171]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gpio.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wakeup_handler
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
</UL>

<P><STRONG><a name="[170]"></a>__NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, gpio.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wakeup_handler
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
</UL>

<P><STRONG><a name="[18d]"></a>gpio_interrupt_disable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gpio.o(i.gpio_interrupt_disable))
<BR><BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_disable
</UL>

<P><STRONG><a name="[175]"></a>gpio_interrupt_enable</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, gpio.o(i.gpio_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioin_event
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_enable
</UL>

<P><STRONG><a name="[16]"></a>gpio_sleep_handler</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, gpio.o(i.gpio_sleep_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gpio_sleep_handler &rArr; hal_gpio_wakeup_set
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_wakeup_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio.o(i.hal_gpio_init)
</UL>
<P><STRONG><a name="[15]"></a>gpio_wakeup_handler</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, gpio.o(i.gpio_wakeup_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = gpio_wakeup_handler &rArr; hal_gpioin_enable &rArr; hal_gpio_pin_init
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioin_event_pin
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpioin_enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio.o(i.hal_gpio_init)
</UL>
<P><STRONG><a name="[174]"></a>gpioin_event</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, gpio.o(i.gpioin_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gpioin_event &rArr; gpio_interrupt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioin_event_pin
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_GPIO_IRQHandler
</UL>

<P><STRONG><a name="[173]"></a>gpioin_event_pin</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gpio.o(i.gpioin_event_pin))
<BR><BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioin_event
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_wakeup_handler
</UL>

<P><STRONG><a name="[179]"></a>irq_rx_handler</STRONG> (Thumb, 72 bytes, Stack size 48 bytes, uart.o(i.irq_rx_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = irq_rx_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_UART0_IRQHandler
</UL>

<P><STRONG><a name="[17a]"></a>irq_tx_empty_handler</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, uart.o(i.irq_tx_empty_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = irq_tx_empty_handler &rArr; hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_UART0_IRQHandler
</UL>

<P><STRONG><a name="[1ad]"></a>txmit_buf_polling</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, uart.o(i.txmit_buf_polling))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = txmit_buf_polling
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_send_buff
</UL>

<P><STRONG><a name="[1ac]"></a>txmit_buf_use_tx_buf</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, uart.o(i.txmit_buf_use_tx_buf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = txmit_buf_use_tx_buf &rArr; hal_pwrmgr_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_lock
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_send_buff
</UL>

<P><STRONG><a name="[18]"></a>uart_hw_config</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, uart.o(i.uart_hw_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = uart_hw_config &rArr; hal_gpio_fmux_set
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_reset
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_pclk
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_gate_enable
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux_set
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart.o(i.hal_uart_init)
</UL>
<P><STRONG><a name="[1e7]"></a>print</STRONG> (Thumb, 232 bytes, Stack size 48 bytes, my_printf.o(i.print))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prints
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printi
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printchar
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
</UL>

<P><STRONG><a name="[1eb]"></a>printchar</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, my_printf.o(i.printchar))
<BR><BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prints
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printi
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print
</UL>

<P><STRONG><a name="[1e9]"></a>printi</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, my_printf.o(i.printi))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prints
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printchar
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print
</UL>

<P><STRONG><a name="[1ea]"></a>prints</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, my_printf.o(i.prints))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prints
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printchar
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printi
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print
</UL>

<P><STRONG><a name="[14]"></a>adc_wakeup_hdl</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, adc.o(i.adc_wakeup_hdl))
<BR>[Address Reference Count : 1]<UL><LI> adc.o(i.hal_adc_init)
</UL>
<P><STRONG><a name="[122]"></a>clear_adcc_cfg</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, adc.o(i.clear_adcc_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = clear_adcc_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_stop
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_init
</UL>

<P><STRONG><a name="[17c]"></a>set_sampling_resolution</STRONG> (Thumb, 132 bytes, Stack size 20 bytes, adc.o(i.set_sampling_resolution))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = set_sampling_resolution
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_config_channel
</UL>

<P><STRONG><a name="[212]"></a>__NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, spi.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_int_enable
</UL>

<P><STRONG><a name="[1a7]"></a>hal_spi_master_init</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, spi.o(i.hal_spi_master_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_spi_master_init
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_bus_init
</UL>

<P><STRONG><a name="[1a4]"></a>hal_spi_pin_deinit</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, spi.o(i.hal_spi_pin_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_spi_pin_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_pin0to3_pin31to34_control
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_bus_deinit
</UL>

<P><STRONG><a name="[1a6]"></a>hal_spi_pin_init</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, spi.o(i.hal_spi_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = hal_spi_pin_init &rArr; hal_gpio_fmux_set
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux_set
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_pin0to3_pin31to34_control
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_bus_init
</UL>

<P><STRONG><a name="[1a9]"></a>spi_int_disable</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, spi.o(i.spi_int_disable))
<BR><BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_bus_init
</UL>

<P><STRONG><a name="[178]"></a>spi_int_handle</STRONG> (Thumb, 232 bytes, Stack size 48 bytes, spi.o(i.spi_int_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = spi_int_handle &rArr; hal_pwrmgr_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_unlock
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_fmux
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_SPI1_IRQHandler
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_SPI0_IRQHandler
</UL>

<P><STRONG><a name="[177]"></a>spis_int_handle</STRONG> (Thumb, 92 bytes, Stack size 48 bytes, spi.o(i.spis_int_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = spis_int_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_SPI1_IRQHandler
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_SPI0_IRQHandler
</UL>

<P><STRONG><a name="[1e]"></a>negedge_callback_wakeup</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, keys.o(i.negedge_callback_wakeup))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = negedge_callback_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keys.o(i.keys_Init)
</UL>
<P><STRONG><a name="[1d]"></a>posedge_callback_wakeup</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, keys.o(i.posedge_callback_wakeup))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = posedge_callback_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keys.o(i.keys_Init)
</UL>
<P><STRONG><a name="[100]"></a>battMeasure</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, battservice.o(i.battMeasure))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = battMeasure &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_get_percent
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battReadAttrCB
</UL>

<P><STRONG><a name="[33]"></a>battReadAttrCB</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, battservice.o(i.battReadAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = battReadAttrCB &rArr; battMeasure &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCompensationVolt
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battMeasure
</UL>
<BR>[Address Reference Count : 1]<UL><LI> battservice.o(.constdata)
</UL>
<P><STRONG><a name="[34]"></a>battWriteAttrCB</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, battservice.o(i.battWriteAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = battWriteAttrCB &rArr; GATTServApp_ProcessCCCWriteReq &rArr; GATTServApp_SendCCCUpdatedEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessCCCWriteReq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> battservice.o(.constdata)
</UL>
<P><STRONG><a name="[35]"></a>devInfo_ReadAttrCB</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, devinfoservice.o(i.devInfo_ReadAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = devInfo_ReadAttrCB &rArr; systems_param_Get_param
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systems_param_Get_param
</UL>
<BR>[Address Reference Count : 1]<UL><LI> devinfoservice.o(.constdata)
</UL>
<P><STRONG><a name="[36]"></a>ggs_ReadAttrCB</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, gapgattserver.o(i.ggs_ReadAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ggs_ReadAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_strlen (via Veneer)
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapgattserver.o(.constdata)
</UL>
<P><STRONG><a name="[e6]"></a>ggs_SetAttrWPermit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, gapgattserver.o(i.ggs_SetAttrWPermit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ggs_SetAttrWPermit
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GGS_SetParameter
</UL>

<P><STRONG><a name="[37]"></a>ggs_WriteAttrCB</STRONG> (Thumb, 222 bytes, Stack size 40 bytes, gapgattserver.o(i.ggs_WriteAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ggs_WriteAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_strlen (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapgattserver.o(.constdata)
</UL>
<P><STRONG><a name="[153]"></a>gapRole_ProcessGAPMsg</STRONG> (Thumb, 492 bytes, Stack size 24 bytes, peripheral.o(i.gapRole_ProcessGAPMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = gapRole_ProcessGAPMsg &rArr; GAPBondMgr_LinkEst &rArr; GAPBondMgr_ResolveAddr &rArr; gapBondMgrGetPublicAddr &rArr; osal_snv_read
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event (via Veneer)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_get_timeoutEx (via Veneer)
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_UpdateAdvertisingData (via Veneer)
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetParamValue (via Veneer)
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_EndDiscoverable (via Veneer)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessOSALMsg
</UL>

<P><STRONG><a name="[b4]"></a>gapRole_ProcessOSALMsg</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, peripheral.o(i.gapRole_ProcessOSALMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = gapRole_ProcessOSALMsg &rArr; gapRole_ProcessGAPMsg &rArr; GAPBondMgr_LinkEst &rArr; GAPBondMgr_ResolveAddr &rArr; gapBondMgrGetPublicAddr &rArr; osal_snv_read
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_TerminateConnection
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetParamValue (via Veneer)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapRole_ProcessGAPMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent
</UL>

<P><STRONG><a name="[b8]"></a>gapRole_startConnUpdate</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, peripheral.o(i.gapRole_startConnUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapRole_startConnUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L2CAP_ConnParamUpdateReq (via Veneer)
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_GetParamValue (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SetParameter
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_ProcessEvent
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_SendUpdateParam
</UL>

<P><STRONG><a name="[ab]"></a>gapBondMgrFindAddr</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gapbondmgr.o(i.gapBondMgrFindAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapBondMgrFindAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ResolveAddr
</UL>

<P><STRONG><a name="[af]"></a>gapBondMgrGetPublicAddr</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, gapbondmgr.o(i.gapBondMgrGetPublicAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gapBondMgrGetPublicAddr &rArr; osal_snv_read
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_read
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_ResolveAddr
</UL>

<P><STRONG><a name="[a7]"></a>gapBondMgrInvertCharCfgItem</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gapbondmgr.o(i.gapBondMgrInvertCharCfgItem))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPBondMgr_LinkEst
</UL>

<P><STRONG><a name="[d7]"></a>gattServApp_FindAuthorizeAttrCB</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gattservapp.o(i.gattServApp_FindAuthorizeAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gattServApp_FindAuthorizeAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindServiceCBs
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessWriteReq
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessPrepareWriteReq
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
</UL>

<P><STRONG><a name="[cc]"></a>gattServApp_FindCharCfgItem</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gattservapp.o(i.gattServApp_FindCharCfgItem))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_WriteCharCfg
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadCharCfg
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_InitCharCfg
</UL>

<P><STRONG><a name="[156]"></a>gattServApp_FindPrepareWriteQ</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gattservapp.o(i.gattServApp_FindPrepareWriteQ))
<BR><BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessPrepareWriteReq
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessExecuteWriteReq
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_HandleConnStatusCB
</UL>

<P><STRONG><a name="[d8]"></a>gattServApp_FindServiceCBs</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gattservapp.o(i.gattServApp_FindServiceCBs))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_WriteAttr
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindAuthorizeAttrCB
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
</UL>

<P><STRONG><a name="[b]"></a>gattServApp_HandleConnStatusCB</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gattservapp.o(i.gattServApp_HandleConnStatusCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gattServApp_HandleConnStatusCB &rArr; GATTServApp_InitCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindPrepareWriteQ
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_State (via Veneer)
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_InitCharCfg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattservapp.o(i.GATTServApp_Init)
</UL>
<P><STRONG><a name="[157]"></a>gattServApp_ProcessExecuteWriteReq</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, gattservapp.o(i.gattServApp_ProcessExecuteWriteReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gattServApp_ProcessExecuteWriteReq &rArr; GATTServApp_WriteAttr
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_WriteAttr
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindPrepareWriteQ
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ExecuteWriteRsp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[159]"></a>gattServApp_ProcessFindByTypeValueReq</STRONG> (Thumb, 224 bytes, Stack size 48 bytes, gattservapp.o(i.gattServApp_ProcessFindByTypeValueReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gattServApp_ProcessFindByTypeValueReq &rArr; GATTServApp_ReadAttr &rArr; gattServApp_FindAuthorizeAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcmp (via Veneer)
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindNextAttr (via Veneer)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandleUUID (via Veneer)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_FindByTypeValueRsp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[d6]"></a>gattServApp_ProcessMsg</STRONG> (Thumb, 338 bytes, Stack size 40 bytes, gattservapp.o(i.gattServApp_ProcessMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = gattServApp_ProcessMsg &rArr; gattServApp_ProcessReadByGrpTypeReq &rArr; GATTServApp_ReadAttr &rArr; gattServApp_FindAuthorizeAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ExchangeMTURsp (via Veneer)
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ErrorRsp (via Veneer)
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessWriteReq
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadMultiReq
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByTypeReq
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessReadByGrpTypeReq
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessPrepareWriteReq
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessFindByTypeValueReq
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessExecuteWriteReq
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle (via Veneer)
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_AppCompletedMsg (via Veneer)
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ReadRsp (via Veneer)
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ReadBlobRsp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessEvent
</UL>

<P><STRONG><a name="[165]"></a>gattServApp_ProcessPrepareWriteReq</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, gattservapp.o(i.gattServApp_ProcessPrepareWriteReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gattServApp_ProcessPrepareWriteReq &rArr; gattServApp_FindAuthorizeAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindPrepareWriteQ
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindAuthorizeAttrCB
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle (via Veneer)
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_PrepareWriteRsp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[163]"></a>gattServApp_ProcessReadByGrpTypeReq</STRONG> (Thumb, 300 bytes, Stack size 56 bytes, gattservapp.o(i.gattServApp_ProcessReadByGrpTypeReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gattServApp_ProcessReadByGrpTypeReq &rArr; GATTServApp_ReadAttr &rArr; gattServApp_FindAuthorizeAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindNextAttr (via Veneer)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandleUUID (via Veneer)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_VerifyReadPermissions (via Veneer)
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ReadByGrpTypeRsp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[15d]"></a>gattServApp_ProcessReadByTypeReq</STRONG> (Thumb, 262 bytes, Stack size 48 bytes, gattservapp.o(i.gattServApp_ProcessReadByTypeReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gattServApp_ProcessReadByTypeReq &rArr; GATTServApp_ReadAttr &rArr; gattServApp_FindAuthorizeAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandleUUID (via Veneer)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_VerifyReadPermissions (via Veneer)
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ReadByTypeRsp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[162]"></a>gattServApp_ProcessReadMultiReq</STRONG> (Thumb, 186 bytes, Stack size 48 bytes, gattservapp.o(i.gattServApp_ProcessReadMultiReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gattServApp_ProcessReadMultiReq &rArr; GATTServApp_ReadAttr &rArr; gattServApp_FindAuthorizeAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadAttr
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle (via Veneer)
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_ReadMultiRsp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[164]"></a>gattServApp_ProcessWriteReq</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, gattservapp.o(i.gattServApp_ProcessWriteReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gattServApp_ProcessWriteReq &rArr; GATTServApp_WriteAttr
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_WriteAttr
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_FindAuthorizeAttrCB
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_FindHandle (via Veneer)
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATT_WriteRsp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattServApp_ProcessMsg
</UL>

<P><STRONG><a name="[c9]"></a>gattServApp_SetNumPrepareWrites</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, gattservapp.o(i.gattServApp_SetNumPrepareWrites))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gattServApp_SetNumPrepareWrites
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_Init
</UL>

<P><STRONG><a name="[1ae]"></a>__NVIC_SystemReset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ota_app_service.o(i.__NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_cmd
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handleConnStatusCB
</UL>

<P><STRONG><a name="[1f]"></a>handleConnStatusCB</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, ota_app_service.o(i.handleConnStatusCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = handleConnStatusCB &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_State (via Veneer)
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_InitCharCfg
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ota_app_service.o(i.ota_app_AddService)
</UL>
<P><STRONG><a name="[38]"></a>ota_ReadAttrCB</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ota_app_service.o(i.ota_ReadAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ota_ReadAttrCB &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ota_app_service.o(.constdata)
</UL>
<P><STRONG><a name="[39]"></a>ota_WriteAttrCB</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, ota_app_service.o(i.ota_WriteAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = ota_WriteAttrCB &rArr; process_cmd &rArr; response &rArr; GAPRole_GetParameter
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessCCCWriteReq
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_cmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ota_app_service.o(.constdata)
</UL>
<P><STRONG><a name="[1e4]"></a>process_cmd</STRONG> (Thumb, 190 bytes, Stack size 48 bytes, ota_app_service.o(i.process_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = process_cmd &rArr; response &rArr; GAPRole_GetParameter
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_GetParameter
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;response
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_WriteAttrCB
</UL>

<P><STRONG><a name="[1ec]"></a>response</STRONG> (Thumb, 94 bytes, Stack size 264 bytes, ota_app_service.o(i.response))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = response &rArr; GAPRole_GetParameter
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAPRole_GetParameter
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset (via Veneer)
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATT_Notification (via Veneer)
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ReadCharCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_cmd
</UL>

<P><STRONG><a name="[c]"></a>simpleProfile_HandleConnStatusCB</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, simplegattprofile.o(i.simpleProfile_HandleConnStatusCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = simpleProfile_HandleConnStatusCB &rArr; GATTServApp_InitCharCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkDB_State (via Veneer)
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_InitCharCfg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> simplegattprofile.o(i.SimpleProfile_AddService)
</UL>
<P><STRONG><a name="[3a]"></a>simpleProfile_ReadAttrCB</STRONG> (Thumb, 250 bytes, Stack size 32 bytes, simplegattprofile.o(i.simpleProfile_ReadAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = simpleProfile_ReadAttrCB
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temp_get_value
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> simplegattprofile.o(.constdata)
</UL>
<P><STRONG><a name="[3b]"></a>simpleProfile_WriteAttrCB</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, simplegattprofile.o(i.simpleProfile_WriteAttrCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = simpleProfile_WriteAttrCB &rArr; GATTServApp_ProcessCCCWriteReq &rArr; GATTServApp_SendCCCUpdatedEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx (via Veneer)
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy (via Veneer)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx (via Veneer)
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GATTServApp_ProcessCCCWriteReq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> simplegattprofile.o(.constdata)
</UL>
<P><STRONG><a name="[19f]"></a>__NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, main.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_wakeup_handler
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rfphy_init
</UL>

<P><STRONG><a name="[19d]"></a>hal_rfphy_init</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, main.o(i.hal_rfphy_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = hal_rfphy_init &rArr; hal_rom_code_ini &rArr; rf_calibrate1 &rArr; rc32k_calibration_check &rArr; rc32k_tracking_check &rArr; WaitRTCCount
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_pull_set
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwrmgr_register
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subWriteReg
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rom_code_ini
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[17]"></a>rf_wakeup_handler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, main.o(i.rf_wakeup_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rf_wakeup_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.hal_rfphy_init)
</UL>
<P><STRONG><a name="[1e1]"></a>snv_calc_addr</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, osal_snv.o(i.snv_calc_addr))
<BR><BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_write
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_read
</UL>

<P><STRONG><a name="[1e3]"></a>snvwr</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, osal_snv.o(i.snvwr))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = snvwr &rArr; ProgramWord
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramWord
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_snv_write
</UL>

<P><STRONG><a name="[40]"></a>hard_fault</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, jump_table.o(i.hard_fault))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = hard_fault &rArr; phy_printf &rArr; print &rArr; printi &rArr; prints
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(jump_table_mem_area)
</UL>
<P><STRONG><a name="[1fa]"></a>chip_id_one_bit_hot_convter</STRONG> (Thumb, 108 bytes, Stack size 20 bytes, flash_ext.o(i.chip_id_one_bit_hot_convter))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = chip_id_one_bit_hot_convter
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_chip_id
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_chip_mAddr
</UL>

<P><STRONG><a name="[f8]"></a>_printf_core</STRONG> (Thumb, 1020 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$8
</UL>

<P><STRONG><a name="[fb]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[fa]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[e]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf8.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0sprintf$8)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
